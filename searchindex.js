Search.setIndex({"docnames": ["analysis", "api", "api/dtype", "api/encode", "api/high_level", "api/json_ai", "api/predictor", "api/types", "data", "encoder", "ensemble", "helpers", "index", "lightwood_philosophy", "mixer", "tutorials", "tutorials/README", "tutorials/custom_cleaner/custom_cleaner", "tutorials/custom_encoder_rulebased/custom_encoder_rulebased", "tutorials/custom_explainer/custom_explainer", "tutorials/custom_mixer/custom_mixer", "tutorials/custom_splitter/custom_splitter", "tutorials/tutorial_data_analysis/tutorial_data_analysis", "tutorials/tutorial_time_series/tutorial_time_series", "tutorials/tutorial_update_models/tutorial_update_models"], "filenames": ["analysis.rst", "api.rst", "api/dtype.rst", "api/encode.rst", "api/high_level.rst", "api/json_ai.rst", "api/predictor.rst", "api/types.rst", "data.rst", "encoder.rst", "ensemble.rst", "helpers.rst", "index.rst", "lightwood_philosophy.rst", "mixer.rst", "tutorials.rst", "tutorials/README.md", "tutorials/custom_cleaner/custom_cleaner.ipynb", "tutorials/custom_encoder_rulebased/custom_encoder_rulebased.ipynb", "tutorials/custom_explainer/custom_explainer.ipynb", "tutorials/custom_mixer/custom_mixer.ipynb", "tutorials/custom_splitter/custom_splitter.ipynb", "tutorials/tutorial_data_analysis/tutorial_data_analysis.ipynb", "tutorials/tutorial_time_series/tutorial_time_series.ipynb", "tutorials/tutorial_update_models/tutorial_update_models.ipynb"], "titles": ["<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">Analysis</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">API</span></code>", "Data Types (dtypes)", "Encode your data", "JSON-AI Config", "JSON-AI Config", "Predictor Interface", "Lightwood API Types", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">Data</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">Encoders</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">Ensemble</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">Helpers</span></code>", "Lightwood", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">Lightwood</span> <span class=\"pre\">Philosophy</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">Mixers</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">Tutorials</span></code>", "How to make a tutorial notebook?", "Using your own pre-processing methods in Lightwood", "Custom Encoder: Rule-Based", "Tutorial - Implementing a custom analysis block in Lightwood", "Tutorial - Implementing a custom mixer in Lightwood", "Build your own training/testing split", "Tutorial - Introduction to Lightwood\u2019s statistical analysis", "Tutorial - Time series forecasting", "Introduction"], "terms": {"analys": 0, "mixer": [0, 6, 7, 9, 10, 12, 13, 15, 17, 18, 19, 21, 22, 23, 24], "ensembl": [0, 6, 7, 12, 13, 14, 17, 19, 20, 21, 23, 24], "extract": [0, 7, 8, 13, 17, 21], "static": [0, 7], "insight": [0, 7, 8, 17, 19, 20, 21, 22, 23, 24], "train": [0, 4, 5, 6, 7, 8, 9, 12, 14, 15, 17, 18, 19, 20, 22], "predict": [0, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 17, 18, 19, 20, 21, 24], "time": [0, 7, 8, 9, 11, 12, 13, 14, 17, 19, 21], "model": [0, 5, 6, 7, 8, 9, 10, 14, 15, 17, 18, 19, 20, 21, 22, 23], "dynam": [0, 7, 9], "class": [0, 2, 6, 7, 8, 9, 10, 11, 13, 14, 17, 18, 19, 20, 21, 22], "accstat": [0, 12, 17, 19, 20, 21, 23, 24], "dep": [0, 17, 19, 21], "icp": [0, 7, 12, 17, 19, 20, 21, 23, 24], "sourc": [0, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 17, 20, 21], "comput": [0, 8, 9, 11, 17, 19, 21], "accuraci": [0, 7, 9, 10, 19, 20, 23, 24], "stat": [0, 13, 14, 17, 18, 21], "confus": [0, 7, 19], "matrix": [0, 7, 19], "valid": [0, 5, 7, 10, 12, 14, 17, 19, 20, 21, 23, 24], "dataset": [0, 5, 6, 7, 8, 9, 10, 12, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24], "analyz": [0, 7, 8, 12, 17, 18, 19, 20, 21, 22, 23, 24], "info": [0, 9, 14, 17, 18, 19, 20, 21, 22, 23, 24], "kwarg": [0, 10, 17, 19, 21], "thi": [0, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24], "method": [0, 4, 7, 8, 9, 10, 12, 13, 14, 18, 19, 20, 21, 23, 24], "should": [0, 5, 7, 9, 10, 12, 13, 14, 16, 18, 19, 23], "call": [0, 4, 5, 7, 8, 9, 10, 12, 13, 14, 18, 19, 20, 22, 23, 24], "onc": [0, 7, 12, 14, 17, 18, 19, 20, 21, 23], "dure": [0, 5, 9, 14], "phase": [0, 8, 9, 10, 13, 14, 17, 19, 20, 21, 22, 23, 24], "all": [0, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 17, 18, 19, 20, 21, 22, 23, 24], "It": [0, 4, 9, 11, 13, 14, 17, 23], "ani": [0, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 19, 21, 22, 24], "inform": [0, 2, 6, 7, 9, 14, 17, 19, 21], "block": [0, 7, 8, 13, 17, 20, 21, 22, 23, 24], "mai": [0, 2, 5, 7, 8, 9, 12, 14, 16, 17, 18, 21, 22], "either": [0, 7, 8, 9, 11, 13, 18], "output": [0, 6, 7, 8, 9, 10, 13, 14, 18, 19, 20, 23, 24], "object": [0, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 18, 24], "us": [0, 2, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 18, 19, 21, 22, 23, 24], "infer": [0, 2, 7, 8, 9, 13, 14, 17, 18, 19, 20, 21, 22, 23, 24], "when": [0, 4, 7, 9, 10, 11, 14, 17, 19, 21, 22, 24], "explain": [0, 7, 12, 13, 15, 17, 19, 20, 21, 23, 24], "i": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24], "case": [0, 7, 8, 9, 10, 17, 18, 19, 20, 21, 22], "make": [0, 7, 9, 12, 13, 15, 17, 18, 20, 21, 22, 23], "sure": [0, 12, 17, 23], "need": [0, 6, 7, 9, 12, 14, 16, 18, 20, 22, 23, 24], "ar": [0, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24], "ad": [0, 7, 12, 14, 19], "runtim": [0, 17, 18, 19, 20, 21, 23, 24], "so": [0, 7, 9, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24], "can": [0, 5, 6, 7, 9, 10, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24], "access": [0, 17, 18, 21, 22], "them": [0, 6, 9, 11, 12, 13, 16, 17, 19, 20, 22, 23, 24], "rtype": [0, 6, 7, 9], "dict": [0, 4, 6, 7, 8, 9, 14, 17, 19, 20, 21, 24], "str": [0, 4, 5, 6, 7, 8, 9, 14, 17, 18, 19, 20, 21], "paramet": [0, 4, 5, 6, 7, 8, 9, 11, 14, 20, 21, 22, 23], "dictionari": [0, 4, 6, 7, 8, 9, 12, 14, 17, 18, 19, 21], "where": [0, 7, 8, 9, 10, 12, 14, 17, 18, 19, 20, 21, 22], "new": [0, 2, 4, 6, 7, 9, 12, 14, 15, 17, 19, 21, 24], "The": [0, 1, 2, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 16, 17, 18, 19, 21, 22, 23, 24], "next": [0, 4, 14, 23], "previou": [0, 7, 9, 12, 19], "start": [0, 6, 10, 12, 14, 17, 18, 19, 20, 21, 22, 23, 24], "point": [0, 7, 8, 9, 14, 18, 19, 23], "type": [0, 1, 4, 5, 6, 8, 9, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24], "param": [0, 5, 6, 7, 9, 17, 18, 21], "name": [0, 5, 7, 8, 9, 12, 14, 17, 18, 21, 22], "variabl": [0, 11, 17], "from": [0, 4, 6, 7, 8, 9, 10, 12, 13, 14, 17, 19, 20, 21, 22, 23, 24], "core": [0, 11, 12, 13, 14, 17, 19], "rest": [0, 7, 8, 14, 22, 23], "pipelin": [0, 2, 5, 6, 7, 8, 12, 16, 18, 19, 22, 23], "baseanalysisblock": [0, 12, 19], "inherit": [0, 2, 6, 8, 13, 14, 18, 19], "row_insight": [0, 19], "global_insight": [0, 17, 19, 21], "addit": [0, 7, 9, 12, 13, 14, 17, 18, 19, 22, 23, 24], "explan": [0, 13], "an": [0, 5, 6, 7, 8, 9, 10, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24], "instanc": [0, 6, 7, 21, 22], "level": [0, 7, 10, 11, 13, 18, 23], "row": [0, 7, 8, 9, 12, 18, 19, 20, 21, 22, 23, 24], "wise": [0, 9, 14], "global": [0, 12, 14, 16], "For": [0, 2, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 17, 18, 19, 20, 21, 22, 24], "former": [0, 19], "return": [0, 4, 5, 6, 7, 8, 9, 10, 11, 14, 17, 18, 19, 20, 21, 23], "data": [0, 1, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 19, 20, 22, 24], "frame": [0, 6, 8, 13, 18, 21], "latter": [0, 19], "requir": [0, 5, 6, 7, 11, 12, 13, 14, 16, 17, 18, 19, 21, 24], "datafram": [0, 4, 6, 7, 8, 11, 12, 16, 17, 18, 19, 20, 21, 23, 24], "previous": [0, 5, 6, 9, 18, 19], "concern": 0, "itself": [0, 13, 22], "tupl": [0, 7, 9, 11, 19], "modifi": [0, 4, 13, 17, 18, 19, 22, 24], "input": [0, 2, 6, 7, 9, 11, 12, 14, 17, 18, 20, 21, 23], "here": [0, 9, 12, 17, 18, 21, 22], "confstat": [0, 12, 17, 19, 20, 21, 23, 24], "ece_bin": 0, "10": [0, 9, 12, 14, 18, 19, 20, 22, 23, 24], "confid": [0, 7, 11, 13, 19, 20, 23, 24], "relat": [0, 17], "statist": [0, 6, 13, 17, 18, 19, 20, 21, 23, 24], "held": [0, 7, 14, 19, 24], "out": [0, 6, 7, 9, 12, 13, 14, 17, 18, 20, 21, 22, 24], "todo": [0, 7, 9, 11], "regress": [0, 6, 10, 12, 14, 17, 18, 19, 20, 21], "forecast": [0, 7, 8, 9, 10, 14], "task": [0, 7, 8, 9, 10, 12, 13, 14, 17, 19, 20, 24], "confidence_norm": [0, 17, 21], "fals": [0, 7, 9, 11, 14, 17, 18, 20, 21, 22, 23, 24], "fixed_signific": [0, 17, 21], "none": [0, 4, 6, 7, 8, 9, 10, 11, 14, 17, 18, 20, 21, 22, 23], "estim": [0, 6, 7, 14, 17, 19, 21, 23], "induct": [0, 19], "conform": [0, 7, 19], "predictor": [0, 1, 4, 7, 12, 13, 14, 17, 19, 20, 21, 22], "agnost": [0, 17], "permutationfeatureimport": [0, 12, 17, 19, 20, 21, 23, 24], "disable_column_import": 0, "row_limit": 0, "1000": [0, 14, 19, 20, 24], "col_limit": 0, "A": [0, 4, 5, 6, 7, 8, 9, 11, 13, 14, 17, 19, 21, 23], "c": [0, 9, 19], "": [0, 4, 6, 7, 8, 9, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24], "t": [0, 5, 6, 7, 9, 11, 12, 13, 14, 17, 19, 20, 21, 22], "column": [0, 2, 5, 6, 7, 8, 9, 11, 12, 13, 14, 17, 18, 19, 20, 21, 23, 24], "import": [0, 2, 7, 9, 10, 11, 12, 13, 14, 17, 18, 19, 20, 21, 22, 23, 24], "via": [0, 4, 6, 7, 9, 10, 12, 13, 14, 16, 18], "permut": 0, "roughli": 0, "speak": 0, "procedur": [0, 2, 5, 7, 8, 9, 13, 14, 17, 19, 21, 24], "iter": [0, 9, 11, 14, 19, 23], "over": [0, 7, 8, 9, 17], "option": [0, 4, 6, 7, 8, 9, 11, 12, 14, 17, 18, 20, 21, 24], "shuffl": [0, 21], "its": [0, 5, 6, 7, 9, 12, 13, 14, 17, 19, 20, 21, 23, 24], "valu": [0, 5, 6, 7, 8, 9, 11, 12, 14, 17, 18, 19, 20, 21, 22, 23, 24], "gener": [0, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 16, 19, 20, 22, 24], "compar": [0, 11, 14, 18, 19, 24], "obtain": [0, 7, 8, 10], "unshuffl": 0, "differ": [0, 7, 9, 14, 16, 17, 19, 22, 23, 24], "normal": [0, 7, 8, 9, 13, 22], "respect": [0, 6, 7, 9, 10, 13, 14, 19, 21, 24], "origin": [0, 7, 8, 9, 13, 14, 17, 18, 20, 21, 24], "clip": 0, "zero": [0, 11], "neg": [0, 17], "report": [0, 7, 9], "score": [0, 7, 10, 11, 14, 17], "note": [0, 7, 8, 9, 10, 12, 14, 17, 18, 19, 21, 23, 24], "crucial": [0, 19, 22], "doe": [0, 9, 12, 14, 17, 19, 22, 23, 24], "refit": [0, 14], "set": [0, 6, 7, 8, 9, 10, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24], "0": [0, 7, 9, 11, 12, 14, 17, 18, 19, 20, 21, 22, 23, 24], "entir": [0, 6, 7, 8, 10, 12, 14, 17, 18, 19, 21, 22, 23], "consid": [0, 7, 9, 11, 14, 17, 18, 19, 20, 21, 22, 23, 24], "possibl": [0, 5, 7, 9, 12, 13, 14], "refer": [0, 7, 8, 9, 13, 14, 17, 18, 21, 22], "http": [0, 9, 12, 14, 17, 18, 19, 20, 21, 22, 23, 24], "scikit": [0, 14, 21], "learn": [0, 2, 4, 6, 7, 8, 9, 10, 12, 13, 14, 17, 18, 19, 20, 21, 22, 23, 24], "org": [0, 9, 14, 23], "stabl": [0, 14, 17, 19, 21, 22, 23], "modul": [0, 1, 7, 8, 9, 12, 13, 14, 16, 18, 19, 20, 24], "permutation_import": 0, "html": [0, 14, 23], "compstat": 0, "lmu": 0, "github": [0, 12, 16, 17, 20, 21], "io": 0, "iml_methods_limit": 0, "pfi": [0, 19, 20, 24], "tempscal": [0, 12], "mit": 0, "licens": [0, 17], "com": [0, 12, 17, 18, 19, 20, 21, 22, 23, 24], "gpleiss": 0, "temperature_sc": 0, "nb": 0, "neural": [0, 9, 12, 14, 17, 18, 19, 20, 21, 24], "network": [0, 9, 14], "classif": [0, 6, 9, 10, 14, 20], "logit": [0, 9], "NOT": [0, 9], "softmax": [0, 10, 14], "log": [0, 9, 11, 17, 18, 21], "tune": [0, 9, 12, 14, 21], "temperatur": 0, "optim": [0, 10, 14, 20], "nll": 0, "perform": [0, 6, 7, 8, 9, 10, 12, 13, 14, 17, 18, 19, 21], "scale": [0, 7, 9, 11], "encoded_data": [0, 9, 17, 18, 21], "target_nam": [0, 17, 21], "target_dtyp": [0, 17, 21], "problem_definit": [0, 4, 5, 7, 12, 17, 18, 19, 20, 21, 22, 23, 24], "stat_analysi": [0, 17, 21], "pred_arg": [0, 8, 17, 21, 24], "runtime_analysi": [0, 17, 21], "explainer_block": [0, 17, 21], "ts_analysi": [0, 10, 14, 17, 21], "run": [0, 5, 7, 9, 10, 12, 13, 14, 16, 18, 20, 23, 24], "end": [0, 6, 7, 12, 14, 17, 20, 21], "everi": [0, 5, 6, 7, 8, 9, 14, 19, 24], "Its": [0, 9], "goal": [0, 7, 12, 17, 18, 19, 21], "potenti": [0, 10, 13, 21], "stage": [0, 12, 24], "e": [0, 5, 6, 7, 8, 9, 11, 12, 13, 14, 16, 17, 19, 21, 22, 24], "g": [0, 7, 8, 9, 12, 13, 14, 16, 19, 22, 24], "As": [0, 6, 14, 17, 19, 21, 22, 23, 24], "user": [0, 1, 2, 5, 6, 7, 9, 10, 12, 13, 14, 16, 17, 19, 22], "specifi": [0, 4, 5, 6, 7, 9, 11, 12, 14, 17, 18, 19, 21, 22, 23], "see": [0, 2, 7, 8, 9, 11, 12, 18, 19, 22, 23, 24], "also": [0, 6, 7, 9, 11, 12, 13, 14, 17, 19, 20, 21, 22], "contain": [0, 4, 5, 6, 7, 9, 11, 13, 14, 17, 20, 21, 24], "model_analyz": [0, 12, 17, 21], "train_data": [0, 14, 17, 18, 19, 20, 21, 24], "stats_info": [0, 17, 19, 21], "target": [0, 5, 6, 7, 8, 9, 10, 12, 13, 14, 17, 18, 19, 20, 21, 22, 23, 24], "pdef": [0, 12, 17, 18, 19, 20, 21, 23, 24], "dtype_dict": [0, 7, 8, 10, 14, 17, 18, 19, 20, 21, 22], "accuracy_funct": [0, 7, 10, 17, 18, 19, 20, 21, 24], "analysis_block": [0, 7, 17, 19, 21], "subset": [0, 8, 14, 24], "evalu": [0, 6, 7, 10, 17, 21, 23], "featur": [0, 2, 5, 6, 7, 9, 10, 11, 14, 17, 18, 19, 20, 21, 23, 24], "calibr": [0, 19], "futur": [0, 7, 8, 9, 23], "addition": [0, 7, 22], "modelanalysi": [0, 7, 12], "runtime_analyz": [0, 17, 19, 21], "get": [0, 7, 8, 11, 12, 13, 14, 17, 18, 20, 21, 22, 24], "popul": [0, 5, 6, 7, 9, 17, 18, 19, 20, 21, 22, 23, 24], "sequenti": [0, 9, 17, 18, 19, 20, 21, 23, 24], "fashion": [0, 13], "store": [0, 6, 7, 8, 10, 13, 17, 19, 21, 22], "model_analysi": [0, 17, 21], "metric": [0, 7, 19, 20, 24], "necessarili": 0, "how": [1, 2, 5, 6, 7, 8, 9, 11, 13, 14, 17, 18, 19, 21, 22, 23, 24], "lightwood": [1, 2, 4, 6, 8, 9, 10, 11, 14, 15, 16, 18, 21, 23, 24], "interfac": [1, 12, 14, 24], "json": [1, 7, 12, 16, 19, 20, 22], "ai": [1, 6, 7, 12, 16, 19, 20, 22], "config": [1, 7, 12], "dtype": [1, 7, 9, 12, 14, 17, 18, 20, 21, 22], "encod": [1, 5, 6, 7, 8, 10, 12, 13, 14, 15, 17, 19, 20, 21, 22, 23, 24], "your": [1, 4, 6, 9, 13, 15, 16, 19, 20, 22, 23, 24], "support": [2, 7, 9, 10, 12, 13, 14, 17, 18, 19, 20, 21, 22, 23, 24], "sever": [2, 6, 7, 17, 19, 21, 22], "standard": [2, 9, 17, 20], "machin": [2, 7, 12, 14, 17, 19, 21, 22, 23], "label": [2, 9, 10, 14, 18, 19, 21, 23], "right": [2, 19], "format": [2, 7, 8, 9, 12, 13, 14, 20], "affect": [2, 12], "what": [2, 5, 8, 9, 12, 17, 18, 21, 22, 23], "engin": [2, 7, 9, 12, 17, 18, 21], "methodologi": [2, 18], "current": [2, 7, 9, 11, 13, 14, 19], "wai": [2, 4, 7, 11, 13, 17, 18, 20, 22], "encourag": 2, "includ": [2, 7, 8, 17, 18, 19, 21], "custom": [2, 4, 5, 6, 7, 10, 12, 13, 14, 15, 16, 22, 23, 24], "tag": [2, 12, 23], "file": [2, 4, 5, 6, 7, 9, 12, 13, 16, 17, 18, 19, 20, 21], "clean": [2, 5, 6, 7, 8, 9, 12, 15, 17, 18, 19, 20, 21, 23, 24], "approach": [2, 5, 6, 7, 9, 12, 13, 17, 18, 21], "basic": [2, 6, 14, 22], "function": [2, 4, 5, 6, 7, 8, 9, 10, 11, 13, 17, 19, 21, 23], "cleaner": [2, 7, 12, 13, 21, 23], "own": [2, 5, 13, 15, 18, 19, 20, 22, 23], "flag": [2, 7, 8, 9, 14, 17, 18], "specif": [2, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 17, 18, 21, 23], "step": [2, 6, 7, 9, 11, 12, 13, 17, 18, 21], "do": [2, 4, 7, 10, 12, 14, 16, 17, 18, 19, 20, 21, 23, 24], "pleas": [2, 8, 9, 12, 14, 16, 17, 18, 19, 21], "tutori": [2, 12, 17, 18, 21, 24], "api": [4, 5, 6, 12, 13, 17, 18, 19, 20, 21, 22, 23, 24], "high_level": [4, 12, 19, 20, 22, 23, 24], "code_from_json_ai": [4, 12, 17, 18, 19, 20, 21, 23], "json_ai": [4, 5, 12, 17, 18, 19, 20, 21, 22, 23], "autogener": [4, 17, 21], "code": [4, 5, 6, 7, 11, 13, 16, 19, 20, 23], "base": [4, 5, 7, 8, 9, 10, 11, 13, 14, 16, 17, 19, 21, 22, 23], "detail": [4, 5, 7, 8, 9, 12, 14, 17, 18, 19, 21], "you": [4, 6, 8, 9, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24], "insid": [4, 7, 8, 9, 14, 19, 20, 24], "jsonai": [4, 5, 7, 10, 12, 13, 17, 18, 19, 21], "text": [4, 9, 12, 13, 17, 19, 21, 23], "creat": [4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 19, 20, 22], "code_from_problem": [4, 12], "df": [4, 7, 12, 17, 18, 19, 20, 21, 22, 23, 24], "raw": [4, 5, 6, 7, 12, 17, 18, 19, 20, 22, 23, 24], "union": [4, 7, 9, 17, 18, 21], "problemdefinit": [4, 5, 7, 12, 14, 17, 18, 19, 20, 21, 22, 23, 24], "manual": [4, 18, 23], "problem": [4, 6, 7, 9, 12, 13, 14, 15, 17, 18, 20, 21, 22, 23], "json_ai_from_problem": [4, 12, 17, 18, 19, 20, 21, 23, 24], "definit": [4, 7, 9, 13, 14, 17, 18, 21, 22, 23], "usual": [4, 7, 14], "would": [4, 7, 11, 13, 14, 16, 17, 18, 22, 24], "want": [4, 8, 12, 14, 17, 18, 19, 20, 21, 22, 23, 24], "subsequ": [4, 7, 19, 21], "edit": [4, 5, 13, 16, 17, 20, 21], "easiest": [4, 13, 17], "unload": 4, "to_dict": [4, 7, 12, 17, 21, 22], "from_dict": [4, 7, 12, 17, 18, 19, 20, 21, 22, 23, 24], "better": [4, 10, 11], "rather": [4, 10, 13, 14], "than": [4, 7, 9, 10, 11, 14, 16, 21], "write": [4, 5, 12, 16, 17, 18, 19, 21], "scratch": [4, 17, 20, 24], "predictor_from_cod": [4, 12, 17, 18, 19, 20, 21, 23], "form": [4, 7, 9, 18], "predictorinterfac": [4, 6, 12, 17, 21], "predictor_from_json_ai": [4, 12, 24], "readi": [4, 17, 18, 19, 21, 23], "predictor_from_problem": [4, 12], "some": [4, 6, 8, 9, 10, 11, 13, 14, 16, 17, 18, 20, 21, 22, 24], "first": [4, 7, 9, 11, 12, 13, 14, 17, 18, 19, 20, 21, 22, 24], "d": [4, 7, 12, 14, 17, 18, 20], "same": [4, 6, 9, 13], "predictor_from_st": [4, 12], "state_fil": 4, "pickl": [4, 20], "result": [4, 6, 7, 9], "save": [4, 6, 12, 16, 17, 19, 20, 21], "add_implicit_valu": [5, 12], "To": [5, 7, 9, 12, 14, 16, 17, 18, 19, 22, 24], "enabl": [5, 7, 9, 10, 11, 12, 13, 14, 17, 19, 21, 23, 24], "breviti": 5, "auto": [5, 14, 17, 20], "unspecifi": [5, 7], "miss": [5, 7, 9, 11, 17, 21], "ml": [5, 6, 7, 12, 13, 14, 19, 22], "describ": [5, 7, 9, 18, 19], "have": [5, 6, 7, 9, 10, 11, 12, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24], "fulli": [5, 14, 17, 19, 21, 22], "necessari": [5, 6, 7, 17, 19, 21, 22], "were": [5, 8, 17, 18], "left": [5, 7], "unment": 5, "fill": [5, 6, 12, 17, 18, 21], "generate_json_ai": [5, 12], "type_inform": [5, 22], "statistical_analysi": [5, 17, 18, 20, 21, 22], "given": [5, 6, 7, 8, 9, 13, 14, 17, 18, 19, 21, 22, 23], "type_inf": [5, 7, 17, 18, 19, 20, 21, 22, 23, 24], "typeinform": [5, 22], "dataprep_ml": [5, 7, 9, 17, 18, 19, 20, 21, 22, 23, 24], "statisticalanalysi": [5, 9, 18, 19, 22], "element": [5, 9, 17, 21, 23], "each": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 17, 18, 19, 21, 22, 23], "within": [5, 6, 7, 8, 9, 12, 16, 17, 18, 19, 21], "mindsdb": [5, 7, 12, 17, 18, 19, 20, 21, 22, 23, 24], "build": [5, 8, 12, 24], "defin": [5, 9, 10, 12, 14, 19, 20, 24], "lookup_encod": [5, 12], "col_dtyp": 5, "col_nam": [5, 17, 18, 21], "is_target": [5, 9, 17, 18, 20, 21], "problem_defint": 5, "is_target_predicting_encod": 5, "assign": [5, 6, 7, 9, 10, 11, 13, 17, 18, 21, 22], "default": [5, 7, 9, 11, 12, 13, 14, 16, 18, 19, 20, 22, 23], "whether": [5, 7, 8, 9, 10, 11, 14, 18, 19, 21, 22], "intak": [5, 6, 7, 13, 14, 18, 21], "represent": [5, 6, 7, 8, 9, 10, 13, 14, 16, 17, 18, 19, 20, 21], "per": [5, 7, 8, 9, 10, 13, 14, 18, 19], "avail": [5, 7, 8, 9, 11, 14, 19, 22, 23, 24], "overrid": [5, 6, 7, 12, 13, 17, 18], "process": [5, 6, 7, 8, 9, 10, 14, 18, 19, 21, 22, 23], "howev": [5, 7, 12, 13, 17, 18, 19, 21], "order": [5, 7, 9, 10, 16, 17, 18, 20, 21, 23], "templat": [5, 12], "automat": [5, 7, 9, 11, 12, 14, 16, 17, 18, 21, 22, 24], "syntax": [5, 7, 12, 17, 21], "while": [5, 9, 12, 13, 18, 19, 21], "arg": [5, 6, 7, 10, 12, 14, 17, 18, 19, 20, 21, 24], "pass": [5, 7, 9, 11, 12, 14, 21, 22, 23, 24], "These": [5, 12, 17, 18, 19, 21], "depend": [5, 7, 8, 9, 12, 13, 14, 17, 20, 21], "prepar": [5, 6, 7, 9, 10, 12, 17, 18, 19, 20, 21, 23, 24], "bool": [5, 7, 8, 9, 11, 14, 17, 18, 19], "If": [5, 7, 8, 9, 10, 11, 12, 14, 16, 17, 21, 23, 24], "true": [5, 7, 8, 9, 10, 11, 14, 17, 18, 20, 21, 22, 23], "onli": [5, 7, 8, 9, 10, 11, 12, 14, 17, 18, 19, 20, 21, 22, 24], "certain": [5, 9, 14, 17], "allow": [5, 6, 7, 11, 12, 13, 17, 18, 21], "particularli": 5, "complex": [5, 10, 12, 13, 19], "criteria": [5, 7, 14, 21], "validate_json_ai": [5, 12], "check": [5, 7, 8, 9, 11, 12, 14, 17, 18, 19, 21, 22, 23], "doesn": [5, 6, 12, 13, 19], "prohibit": 5, "unknown": [5, 7, 9, 14, 18, 19, 20, 21], "turn": [5, 11, 13, 17, 18, 20, 21], "skelet": 6, "structur": [6, 9, 13, 19], "around": [6, 12, 14, 21], "abstract": [6, 7, 8, 12, 13, 17, 19, 21, 22, 24], "encompass": 6, "interact": 6, "full": [6, 9, 12, 13, 17, 19, 21], "intern": [6, 7, 9, 10, 14, 17, 19, 21, 22, 23, 24], "must": [6, 9, 14, 16, 18], "expect": [6, 7, 9, 14, 17, 18, 19, 21], "analyze_data": [6, 12, 17, 18, 19, 20, 21, 23, 24], "peform": 6, "analysi": [6, 7, 11, 12, 13, 14, 15, 17, 18, 20, 21, 23, 24], "unprocess": [6, 12, 17, 21], "help": [6, 16], "downstream": [6, 17], "treat": [6, 7, 14, 18], "preprocess": [6, 7, 12, 18, 19, 20, 23, 24], "appli": [6, 8, 9, 10, 17, 18, 21, 23], "split": [6, 7, 8, 9, 12, 13, 14, 15, 17, 18, 19, 20, 23, 24], "dev": [6, 9, 13, 14, 17, 18, 19, 20, 21, 24], "test": [6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 20, 22, 23, 24], "accord": [6, 8, 11, 13, 17, 18, 19, 22], "splitter": [6, 7, 12, 13, 17, 18], "pre": [6, 7, 8, 9, 12, 14, 18, 21], "vector": [6, 9, 10, 11, 14, 17, 20, 21], "fit": [6, 7, 9, 10, 12, 13, 14, 16, 17, 19, 20, 21, 23, 24], "yield": [6, 7, 9, 10, 14, 23], "analyze_ensembl": [6, 12, 17, 19, 20, 21, 23, 24], "qualiti": [6, 17, 21], "adjust": [6, 9, 12, 17, 19, 20, 21, 23], "incorpor": 6, "updat": [6, 7, 12, 14, 15, 17, 18, 19, 20, 21, 23], "exist": [6, 9, 14, 15, 17, 20, 21], "simplif": 6, "we": [6, 7, 9, 11, 12, 13, 14, 16, 17, 18, 20, 21, 22, 23, 24], "offer": [6, 19, 22, 24], "follow": [6, 7, 8, 9, 12, 17, 18, 19, 20, 21, 23, 24], "until": 6, "reach": [6, 17], "techniqu": [6, 14, 17, 21], "interest": [6, 7, 9, 12, 13, 17, 21, 23], "untrain": 6, "No": [6, 17, 18, 19, 20, 21, 22, 23, 24], "explicit": 6, "provid": [6, 7, 8, 9, 12, 13, 14, 16, 17, 18, 21, 22, 23], "host": [6, 16], "thu": [6, 9, 20], "now": [6, 11, 14, 17, 18, 19, 20, 21, 22, 23, 24], "deploi": [6, 7, 9, 14], "chosen": 6, "best": [6, 7, 10, 17, 18, 19, 20, 21, 23, 24], "further": [6, 7, 12, 17, 21, 23, 24], "j": [6, 17, 19, 21], "son": [6, 17, 21], "creation": 6, "routin": 6, "natur": [6, 13, 19], "new_data": [6, 24], "old_data": [6, 24], "adjust_arg": [6, 14, 17, 21, 24], "adopt": [6, 18], "except": [6, 9, 12, 13, 16, 17, 19, 20, 21], "been": [6, 7, 9, 14, 17, 18, 19, 20, 21, 22, 23, 24], "alreadi": [6, 9, 14, 17, 19, 22], "experiment": [6, 10, 12, 14], "subject": 6, "chang": [6, 7, 9, 11, 12, 13, 16, 17, 18, 21], "In": [6, 9, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24], "situat": 6, "old": [6, 14, 24], "still": [6, 7, 10, 11, 13], "ensur": [6, 7, 9, 16, 17, 21], "finetun": [6, 14], "place": [6, 14, 22], "anyth": [6, 13, 16], "identifi": [6, 7, 13, 17, 18, 19, 20, 21, 22], "distribut": [6, 7, 9, 17, 21, 22], "imbalanc": [6, 9, 22], "other": [6, 7, 11, 13, 14, 17, 18, 20, 21, 22, 23], "nuanc": [6, 7], "enc_data": [6, 17, 21], "relev": [6, 16, 17, 19, 22], "export": [6, 12, 16], "file_path": 6, "json_ai_cod": 6, "both": [6, 7, 9, 13, 14, 18, 19, 22, 23], "singl": [6, 8, 9, 10, 14, 16, 19, 20, 23, 24], "binari": [6, 9, 13, 20, 21], "later": [6, 11, 17, 20, 21, 22], "usag": [6, 9, 11, 14, 22, 24], "locat": [6, 9, 17, 21], "split_data": [6, 17, 18, 21], "self": [6, 9, 17, 18, 19, 20, 21], "kei": [6, 7, 12, 16, 17, 19, 20, 21, 22], "instanti": [6, 7, 12, 17, 18, 21], "attribut": [6, 7, 9, 10, 11, 14, 18, 19], "accordingli": 6, "particular": [6, 17, 18, 19, 22], "ex": [6, 7, 9, 12, 13], "numer": [6, 7, 8, 9, 13, 14, 17, 18, 21, 22], "categor": [6, 9, 10, 13, 17, 18, 19, 20, 22], "etc": [6, 7, 9, 13, 18, 19, 20, 21], "convert": [6, 9, 11, 13, 17, 18], "useabl": 6, "Of": 6, "request": [6, 12, 14, 17, 19, 20, 21, 23, 24], "compil": [6, 11, 14, 17, 21], "amalg": 6, "occur": [6, 7], "noth": [6, 18], "n_sampl": 6, "n_column": 6, "predictionargu": [6, 7, 8, 12, 17, 20, 21], "which": [6, 7, 9, 12, 13, 14, 17, 18, 19, 20, 21, 23], "hold": 6, "length": [6, 7, 8, 9, 11, 14], "ha": [6, 7, 9, 11, 12, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24], "explicitli": [6, 7, 8, 9, 17, 18, 19, 21], "With": [6, 18], "path": [6, 9, 12, 13, 17, 21], "stratifi": [6, 21], "fraction": [6, 9], "consist": [7, 9, 18, 23], "high": [7, 9, 19, 22, 23], "scienc": [7, 12, 18], "up": [7, 13, 16, 17, 19, 21, 23], "being": [7, 13, 14], "repres": [7, 9, 11, 12, 13, 18], "argument": [7, 8, 14, 17, 18, 21, 22, 23, 24], "constructor": 7, "timeseriesset": [7, 8, 9, 12, 14, 17, 19, 21, 22], "is_timeseri": [7, 17, 18, 20, 21, 22], "order_bi": [7, 8, 17, 18, 20, 21, 22, 23], "window": [7, 8, 9, 17, 18, 20, 21, 22, 23], "group_bi": [7, 8, 9, 14, 17, 18, 20, 21, 22], "use_previous_target": [7, 17, 18, 20, 21, 22], "horizon": [7, 8, 9, 14, 17, 18, 20, 21, 22, 23], "historical_column": [7, 17, 18, 20, 21, 22], "target_typ": [7, 17, 18, 20, 21, 22], "allow_incomplete_histori": [7, 17, 18, 20, 21, 22], "eval_incomplet": [7, 17, 18, 20, 21, 22], "interval_period": [7, 17, 18, 20, 21, 22], "seri": [7, 8, 9, 12, 13, 14, 17, 18, 21], "more": [7, 8, 9, 10, 11, 14, 16, 17, 18, 19, 20, 21], "treatment": [7, 9, 17], "carri": 7, "properli": [7, 9], "appropri": [7, 9, 11, 17, 21], "list": [7, 8, 9, 10, 11, 14, 17, 18, 19, 21, 22], "group": [7, 9, 14], "combin": [7, 8, 12, 13], "int": [7, 9, 11, 14, 18, 19, 20, 21, 23, 24], "tempor": 7, "number": [7, 9, 11, 12, 13, 14, 17, 18, 19, 21, 23, 24], "look": [7, 13, 17, 18, 19, 21, 22, 23, 24], "back": [7, 18], "after": [7, 9, 10, 13, 14, 17, 18, 19, 21], "applic": [7, 11, 22], "made": [7, 13, 16, 19], "1": [7, 9, 11, 12, 14, 23, 24], "abl": [7, 18, 19, 22], "mani": [7, 8, 9, 14, 17, 18, 21, 22, 23], "context": [7, 8, 11], "non": [7, 9, 17, 21], "histor": [7, 8, 9], "shall": [7, 21], "without": [7, 9, 12, 13, 18, 24], "through": [7, 9, 11, 13, 14, 17, 19, 21, 23, 24], "integ": [7, 9, 14, 17, 18, 19, 20, 21, 22, 24], "float": [7, 9, 13, 14, 17, 18, 19, 20, 21, 22, 23, 24], "incomplet": 7, "less": [7, 9, 21], "observ": [7, 8, 9, 14, 21, 22, 23], "datetim": [7, 13, 23], "histori": 7, "period": [7, 14], "interv": [7, 8, 13, 23], "timeseries_analyz": [7, 8, 12, 14], "detect_period": 7, "document": [7, 12, 14, 17, 19, 21, 22, 23], "daili": 7, "7": [7, 17, 18, 19, 20, 21, 22, 23, 24], "obj": 7, "python": [7, 9, 11, 12, 13, 14, 18, 19, 20, 22, 23, 24], "mandatori": 7, "from_json": [7, 12], "encode_json": 7, "to_json": [7, 12, 17, 18, 20, 21], "pct_invalid": [7, 17, 18, 20, 21, 22], "unbias_target": [7, 17, 18, 20, 21, 22], "seconds_per_mix": [7, 17, 18, 20, 21, 22, 24], "seconds_per_encod": [7, 17, 18, 20, 21, 22], "expected_additional_tim": [7, 17, 18, 20, 21, 22], "time_aim": [7, 17, 18, 19, 20, 21, 22, 24], "target_weight": [7, 9, 17, 18, 20, 21, 22], "positive_domain": [7, 9, 17, 18, 20, 21, 22], "timeseries_set": [7, 8, 14, 17, 18, 20, 21, 22, 23], "anomaly_detect": [7, 17, 18, 20, 21, 22], "use_default_analysi": [7, 17, 18, 20, 21, 22], "embedding_onli": [7, 17, 18, 20, 21, 22], "ignore_featur": [7, 17, 18, 20, 21, 22], "fit_on_al": [7, 14, 17, 18, 20, 21, 22], "strict_mod": [7, 17, 18, 20, 21, 22], "seed_nr": [7, 17, 18, 20, 21, 22], "indic": [7, 9, 14, 19, 21], "try": [7, 16, 17, 18, 19, 20, 21, 23], "aspect": 7, "about": [7, 9, 13, 14, 17, 22], "long": [7, 12, 14, 17], "take": [7, 9, 11, 14, 17, 18, 19, 20, 22, 23], "maxim": 7, "toler": 7, "invalid": [7, 17, 20], "exce": [7, 11], "taken": [7, 9, 13, 21], "weight": [7, 9, 10], "invers": [7, 9, 18], "often": [7, 9], "thei": [7, 8, 12, 13, 14, 16, 17, 18, 19, 21], "second": [7, 9, 13, 14, 17, 18, 19, 20, 21, 23, 24], "maximum": [7, 9, 11, 14], "spend": 7, "budget": [7, 9, 14], "compon": [7, 13, 21], "much": [7, 11, 14, 17, 18, 19, 21, 23], "tak": 7, "forc": [7, 9], "posit": [7, 9, 17, 21], "conduct": [7, 17], "unsupervis": 7, "anomali": [7, 17, 23], "detect": [7, 17, 18, 19, 20, 21, 22, 23, 24], "map": [7, 9, 14, 17, 18, 20, 21, 22], "autom": [7, 12, 14, 16, 19, 22], "wish": 7, "ignor": [7, 14, 17, 19, 20, 21], "found": [7, 9, 11, 17, 18, 19, 21, 23, 24], "remov": [7, 8, 9, 17, 19, 20, 23], "strictli": [7, 17], "well": [7, 9, 13, 18, 19, 22, 24], "never": [7, 11, 17], "anticip": 7, "incom": 7, "crash": 7, "unstabl": 7, "fail": [7, 10, 14, 16, 20], "seed": [7, 17, 21], "dependency_dict": [7, 17, 18, 20], "imput": [7, 17, 18, 20, 21], "timeseries_transform": 7, "construct": [7, 15, 20], "flexibl": [7, 19, 22], "recip": 7, "column_nam": [7, 8], "submodel": [7, 17, 18, 20, 24], "like": [7, 8, 9, 11, 13, 17, 18, 19, 21, 23, 24], "id": [7, 12, 17, 24], "subroutin": 7, "choos": [7, 17, 21], "handl": [7, 8, 9, 10, 17, 18, 19, 20, 23], "altern": [7, 12], "suggest": 7, "packag": [7, 14, 17, 19, 20, 21, 22, 23, 24], "tool": [7, 16, 22], "transform": [7, 8, 9, 13, 18, 23], "timeseri": [7, 14, 15, 17, 23], "measur": [7, 23], "frequenc": [7, 14], "submodeldata": [7, 12], "is_best": 7, "accuracy_histogram": 7, "accuracy_sampl": 7, "train_sample_s": 7, "test_sample_s": 7, "column_import": 7, "confusion_matrix": 7, "histogram": 7, "submodel_data": 7, "understand": [7, 13, 19, 22], "algorithm": [7, 14, 17, 19, 21], "sampl": [7, 8, 9, 14, 17, 18, 19, 20, 21, 22, 23, 24], "pair": [7, 19], "size": [7, 9, 18, 21, 22], "close": 7, "leav": [7, 19, 20, 23], "one": [7, 9, 11, 14, 17, 19, 20, 22, 23, 24], "covari": 7, "strategi": [7, 9, 18], "predict_proba": 7, "all_mix": [7, 17, 21], "mixer_weight": 7, "fixed_confid": 7, "anomaly_cooldown": 7, "forecast_offset": 7, "simple_ts_bound": 7, "time_format": 7, "force_ts_inf": 7, "return_embed": [7, 17, 21], "On": 7, "field": [7, 17, 22], "trigger": [7, 14, 19, 23, 24], "probabl": [7, 9, 23], "classifi": [7, 9], "instead": [7, 11, 12, 14, 17, 19, 20, 23, 24], "emit": [7, 8, 23], "coeffici": [7, 14], "bound": [7, 11, 13, 14, 23], "mix": [7, 11, 13], "compat": [7, 9, 11, 13, 18], "5": [7, 11, 14, 19, 20, 22, 23, 24], "two": [7, 9, 10, 14, 17, 18, 19, 20, 21, 22, 24], "mean": [7, 8, 9, 10, 13, 14, 18, 19], "weightedmeanensembl": [7, 10, 12], "stackedensembl": [7, 10, 12], "tsstackedensembl": [7, 10, 12], "alpha": [7, 14], "fix": [7, 10, 12], "averag": [7, 9], "correct": [7, 9, 14], "percent": 7, "translat": [7, 9], "error": [7, 9, 14, 17, 20, 21], "rate": [7, 14, 19, 23, 24], "between": [7, 9, 12, 14, 16, 19, 20, 22], "01": [7, 9, 18, 19, 20, 23, 24], "99": [7, 19, 20, 21, 23, 24], "impli": 7, "wider": 7, "tighter": 7, "equal": [7, 21], "minimum": [7, 9, 11, 21], "amount": [7, 14, 21, 23], "timestep": [7, 9, 11, 23], "consecut": 7, "fire": 7, "detector": 7, "disabl": [7, 8, 12, 14, 19, 23, 24], "bonferroni": 7, "resort": 7, "simpler": 7, "uncertainti": 7, "helper": [7, 8, 9, 12, 17, 18, 19, 20, 21, 22, 23, 24], "add_tn_num_conf_bound": [7, 11, 12], "implement": [7, 9, 12, 13, 14, 17, 18, 21, 23, 24], "timestamp": [7, 9, 13, 14, 23], "string": [7, 9, 13, 14], "unless": [7, 9, 19, 20], "empti": [7, 9, 14, 17, 21], "behavior": [7, 8, 9, 13, 14, 18, 19], "produc": [7, 9, 13, 14, 19, 22, 23], "correspond": [7, 9, 19, 20], "w": [7, 9, 17, 19, 21], "r": [7, 21], "focu": [8, 12, 13, 17, 18, 19], "merg": [8, 12], "concatedencodedd": [8, 12, 17, 20, 21], "encoded_ds_arr": 8, "encodedd": [8, 10, 12, 14, 17, 19, 20, 21, 24], "multipl": [8, 9, 10, 12, 13], "datasourc": 8, "entiti": 8, "torch": [8, 9, 11, 17, 18, 19, 20, 21, 23, 24], "util": [8, 14, 19, 23, 24], "cach": [8, 17, 21], "avoid": [8, 14, 16, 17, 21], "duplic": 8, "open": [8, 12, 13, 17, 21], "issu": [8, 12], "data_fram": [8, 17, 21], "clear_cach": [8, 12], "encoded_d": [8, 17, 19, 20, 21], "get_column_original_data": [8, 12, 18], "get_encoded_column_data": [8, 12, 18], "tensor": [8, 9, 11, 18, 19, 20, 23, 24], "baseencod": [8, 9, 12, 13, 14, 17, 18, 20, 21], "build_cach": [8, 12], "initi": [8, 10, 11, 14, 17, 18, 20, 21], "clear": 8, "pd": [8, 9, 11, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24], "get_encoded_data": [8, 12, 17, 21], "include_target": [8, 17, 21], "few": [8, 12, 14, 17, 18], "val": 8, "thing": [8, 12, 13, 14, 16, 21, 22], "group_combin": 8, "determin": [8, 9, 10, 11, 13, 14], "delta": 8, "ts_naive_residu": 8, "residu": 8, "naiv": 8, "repeat": 8, "last": [8, 9, 13, 14], "seen": [8, 14], "ts_naive_ma": 8, "target_norm": 8, "effect": 8, "time_seri": 8, "common": 8, "choic": [8, 18, 19], "aforement": [8, 14], "transform_timeseri": [8, 12], "mode": [8, 9, 10, 11, 12, 17, 21], "conveni": [8, 19, 22], "posterior": 8, "main": [8, 12, 13, 17, 18, 19, 20, 23, 24], "cast": [8, 14, 19, 20], "add": [8, 11, 12, 14, 17, 19], "plu": [8, 14, 17], "logic": [8, 9, 10, 14, 19, 24], "stream": 8, "control": [8, 18], "pytorch": [9, 13], "decod": [9, 12, 14, 18, 20], "arrayencod": [9, 12], "stop_aft": [9, 14, 17, 18, 20, 21, 24], "original_typ": [9, 17, 21], "arrai": [9, 12, 13, 19, 23], "minmax": 9, "simpl": [9, 10, 18, 19, 21, 22, 23, 24], "hot": 9, "sequenc": 9, "space": 9, "column_data": [9, 18], "properti": [9, 17, 21], "train_priming_data": 9, "dev_priming_data": 9, "columnar": 9, "final": [9, 10, 12, 13, 20, 21, 24], "oppos": [9, 16, 18], "rule": [9, 10, 13, 16], "move": [9, 18], "gpu": [9, 11, 14, 18, 19, 23], "is_timeseries_encod": [9, 18], "kind": 9, "is_trainable_encod": [9, 12, 17, 18, 21], "present": [9, 17], "statement": [9, 16], "is_prepar": [9, 18], "signal": 9, "successfulli": 9, "execut": [9, 11, 14, 16, 19], "is_nn_encod": 9, "might": [9, 11, 12, 19, 22, 23, 24], "output_s": [9, 18], "rich": 9, "audio": [9, 13], "part": [9, 12, 14, 17], "concaten": [9, 11, 14], "priming_data": [9, 17, 18, 21], "distilbert": 9, "work": [9, 10, 12, 13, 14, 16, 17, 18, 19, 21, 23], "binaryencod": [9, 12, 20, 21], "handle_unknown": 9, "use_encoded_valu": 9, "assum": [9, 14, 17, 21], "arbitrari": [9, 19], "categori": [9, 12, 13, 18, 19, 20, 21], "b": 9, "special": [9, 13, 17, 22], "oh": 9, "null": [9, 17, 18, 20], "exampl": [9, 11, 16, 17, 18, 19, 21, 22, 24], "outsid": [9, 17, 23], "recogn": 9, "2": [9, 11, 14, 23, 24], "uniqu": [9, 12, 18], "show": [9, 12, 16, 17, 18, 19, 22, 23], "longer": 9, "truli": [9, 12], "comfort": [9, 17], "heavili": 9, "By": [9, 12, 13, 14, 18, 20], "rel": [9, 13], "suppos": [9, 18], "80": [9, 19, 24], "20": [9, 18, 19, 23, 24], "across": [9, 14, 24], "3": [9, 11, 13, 23, 24], "class1": 9, "8": [9, 12, 14, 17, 18, 19, 20, 21, 22, 23, 24], "class2": 9, "inv_target_weight": 9, "target_value_per_class": 9, "oper": [9, 17, 19], "larg": [9, 16, 17, 21], "small": [9, 17], "presumpt": 9, "OR": 9, "alwai": [9, 14, 18, 21], "argmax": 9, "decode_prob": [9, 12], "answer": [9, 14, 21], "revers": 9, "dimens": [9, 11, 18], "unrecogn": 9, "n_": [9, 18], "x": [9, 12, 17, 18, 20, 21, 22, 23], "prime": [9, 17, 21], "index": [9, 12, 18, 19, 20, 22, 23], "vice": 9, "versa": 9, "catarrayencod": [9, 12], "categoricalautoencod": [9, 12, 18], "3600": 9, "max_encoded_length": 9, "100": [9, 19, 22], "desired_error": 9, "batch_siz": 9, "200": [9, 19, 24], "devic": [9, 11, 17, 21], "input_encod": 9, "autoencod": 9, "ae": 9, "excess": 9, "prefer": [9, 12], "highli": [9, 17, 23], "advis": 9, "reconstruct": 9, "abil": 9, "stop": [9, 10, 14, 17, 20, 21, 24], "limit": [9, 13], "sec": 9, "recommend": [9, 12, 17, 21], "threshold": [9, 14], "batch": 9, "get_device_from_nam": 9, "attempt": 9, "onehotencod": [9, 12, 18, 20], "simplelabelencod": [9, 12], "underli": [9, 10, 14, 17], "cardin": 9, "sle": 9, "accur": 9, "overal": [9, 19], "embed": 9, "warn": [9, 14, 17, 19, 20, 21, 23, 24], "cata": 9, "compress": 9, "togeth": [9, 10, 12, 17, 20], "Not": 9, "datetimeencod": [9, 12], "decompos": 9, "constitu": 9, "unit": [9, 12, 14, 16], "month": [9, 23], "year": [9, 18], "those": [9, 11, 12], "magnitud": 9, "sensibl": 9, "cycl": [9, 12], "return_as_datetim": 9, "ndarrai": [9, 19], "panda": [9, 11, 12, 17, 18, 19, 20, 21, 22, 23, 24], "shape": [9, 19, 23, 24], "len": [9, 17, 19, 21, 22, 23, 24], "datetimenormalizerencod": [9, 12], "sinusoid": 9, "receiv": [9, 12, 19], "encode_on": [9, 12], "unix_timestamp": 9, "resolut": 9, "img2vecencod": [9, 12], "224": [9, 19], "485": [9, 19], "456": [9, 19], "406": [9, 19], "std": 9, "229": [9, 19], "225": [9, 19, 22], "imag": [9, 13, 17, 18, 19, 20, 21, 22, 23, 24], "deep": 9, "rescal": 9, "224x224": 9, "deviat": 9, "imagenet": 9, "wa": [9, 17, 19, 20, 21, 22, 23, 24], "nn": 9, "img_to_vec": 9, "img2vec": 9, "resiz": 9, "y": [9, 20, 21, 22], "pixel": 9, "encoded_values_tensor": 9, "referenc": 9, "filepath": 9, "url": [9, 13, 16], "floattensor": 9, "available_devic": 9, "cpu": [9, 11, 18, 19, 23], "multihotencod": [9, 12], "max_dimens": 9, "numarrayencod": [9, 12], "numericencod": [9, 12, 17, 18, 20, 21], "data_typ": 9, "otherwis": [9, 11, 14, 16, 17], "natural_log": 9, "ab": 9, "absolute_mean": 9, "sinc": [9, 12, 13, 14, 20], "just": [9, 14, 18, 19, 21, 22], "absolut": 9, "feed": 9, "stand": 9, "actual": [9, 14, 17, 19, 23], "sort": [9, 18], "nan": [9, 11, 17, 24], "inf": 9, "quantiti": [9, 13, 14, 23], "encoded_valu": 9, "decode_log": 9, "linear": [9, 14], "numpi": [9, 17, 19, 20, 21, 22, 24], "numericalencod": 9, "use_unknown": 9, "One": 9, "individu": [9, 17, 21], "imagin": [9, 18], "n": [9, 11, 14, 17, 19, 22], "05": [9, 14, 19, 23, 24], "15": [9, 19, 20, 21, 23, 24], "class3": 9, "percentag": [9, 21], "total": [9, 14, 17, 18, 19, 20, 21, 22, 23, 24], "extra": [9, 11, 16, 21], "account": [9, 12], "flexibli": 9, "pretrainedlangencod": [9, 12, 17], "max_position_embed": 9, "frozen": 9, "epoch": [9, 14, 19, 23, 24], "output_typ": [9, 17], "embed_mod": 9, "yet": 9, "fine": [9, 22], "max": [9, 11], "freez": 9, "layer": 9, "cl": [9, 13], "max_length": [9, 11], "state": [9, 14, 23], "token": [9, 13, 23], "latent": 9, "most": [9, 12, 13, 17, 21, 23], "separ": [9, 13], "soft": 9, "n_row": [9, 18], "nembed_dim": 9, "n_class": 9, "arxiv": 9, "1910": 9, "01108": 9, "contextu": 9, "sanh": 9, "et": [9, 14], "al": 9, "2019": [9, 18], "encoded_target_valu": [9, 17, 21], "decai": 9, "faster": 9, "lower": [9, 13, 23, 24], "benchmark": [9, 12, 16, 18, 20, 23], "nrow": 9, "n_output_dimens": 9, "fastest": 9, "shorttextencod": [9, 12], "concat": [9, 17, 18, 20, 21], "alloc": 9, "exact": 9, "match": [9, 11], "temporarili": 9, "unnorm": 9, "textrnnencod": [9, 12], "alia": 9, "rnnencod": 9, "timeseriesencod": [9, 12], "along": [9, 11, 17, 21, 22, 23], "tsarraynumericencod": [9, 12], "grouped_bi": 9, "wrap": [9, 10, 24], "domain": [9, 23], "dependency_data": [9, 17, 21], "slice": [9, 23], "decode_on": [9, 12], "tss": [9, 14, 17, 21, 23], "belong": [9, 19], "retriev": [9, 19], "k": [9, 17, 21], "data_window": 9, "sub": 9, "tscatarrayencod": [9, 12], "tsnumericencod": [9, 12], "nxk": 9, "variant": [9, 14], "vanilla": 9, "re": [9, 17, 18, 19, 20, 21], "datum": 9, "vocabularyencod": [9, 12], "baseensembl": [10, 12, 17, 19, 21], "There": [10, 13, 14, 17, 18, 21, 23], "__init__": [10, 14, 17, 18, 19, 20, 21], "__call__": [10, 14, 20], "aggreg": [10, 24], "supports_proba": [10, 12, 14, 17, 21], "bestof": [10, 12, 14, 17, 18, 19, 20, 21, 24], "act": 10, "selector": 10, "embedd": [10, 12, 17, 21], "bypass": 10, "identityensembl": [10, 12], "activ": [10, 11, 14, 23], "said": 10, "ideal": [10, 17, 18, 21], "expens": 10, "done": [10, 11, 12, 13, 14, 17, 18, 20, 23, 24], "meanensembl": [10, 12], "modeensembl": [10, 12], "whose": 10, "vote": 10, "highest": 10, "stochast": 10, "gradient": [10, 13, 14], "descent": 10, "uniformli": 10, "roadmap": 10, "faulti": 10, "earli": [10, 14, 20, 24], "arbitrarili": [10, 11], "secondari": 10, "thin": 10, "wrapper": [10, 14, 19, 22], "afterward": [10, 22], "variou": [11, 12, 18], "lightwoodautocast": [11, 12], "equival": [11, 17, 18, 19, 20, 21, 22, 23, 24], "cuda": [11, 19, 23, 24], "amp": [11, 19, 23, 24], "autocast": 11, "capabl": [11, 24], "leverag": [11, 19, 22, 23, 24], "lt": [11, 19], "manag": 11, "precis": 11, "tss_arg": 11, "deprec": [11, 19, 23, 24], "opt": [11, 19, 20, 23, 24], "solut": 11, "nc": [11, 19], "research": 11, "question": [11, 12, 19, 21, 22], "guarante": [11, 12, 14], "coverag": 11, "conserv": 11, "increas": [11, 21], "width": 11, "factor": [11, 22], "concat_vectors_and_pad": [11, 12], "vec_list": 11, "max_": 11, "pad": 11, "dim": 11, "achiev": [11, 22], "rais": [11, 17, 20, 21], "assertionerror": 11, "greater": 11, "max_len": 11, "input_tensor": 11, "4": [11, 20, 22, 23, 24], "concatenated_pad": 11, "print": [11, 12, 16, 17, 18, 20, 21, 22, 23, 24], "get_devic": [11, 12], "is_cuda_compat": [11, 12], "select": [11, 14], "randomli": 11, "random_gpu": 11, "environ": 11, "num_devic": 11, "system": [11, 13, 14], "architectur": [11, 12, 13, 24], "version": [11, 12, 13, 17, 19, 20, 21, 23], "verifi": [11, 17, 21], "meet": 11, "is_compat": 11, "is_non": [11, 12], "stabil": 11, "chose": 11, "reli": [11, 18], "cell": [11, 19], "corrupt": 11, "hopefulli": [11, 14], "But": 11, "releas": 12, "23": [12, 17, 19, 21, 23], "date": [12, 13, 16, 23], "oct": 12, "24": [12, 19, 23, 24], "2023": 12, "automl": [12, 14, 19, 22], "framework": 12, "declar": 12, "our": [12, 16, 17, 18, 19, 21, 22, 23, 24], "life": 12, "easier": [12, 16, 17, 23], "repetit": 12, "boilerpl": 12, "varieti": [12, 17, 21], "multimedia": 12, "solv": [12, 15, 20], "outlin": 12, "replac": [12, 17, 18, 20, 21], "random": [12, 14, 19, 20, 21, 24], "forest": [12, 20], "philosophi": 12, "pip3": 12, "pip": [12, 14, 23], "abov": [12, 17, 18, 19, 21], "command": [12, 17, 18, 21], "virtual": 12, "clone": 12, "cd": 12, "txt": 12, "pythonpath": 12, "newlin": 12, "bashrc": 12, "go": [12, 17, 18, 19, 20, 21, 24], "directori": [12, 19], "m": [12, 17, 20, 21], "unittest": 12, "discov": 12, "python2": 12, "python3": [12, 19, 20, 23, 24], "visual": [12, 19], "studio": 12, "veri": [12, 13, 14, 17, 19, 22, 23], "popular": [12, 14], "don": [12, 14, 20], "feel": [12, 17], "free": [12, 13], "section": 12, "tip": 12, "trick": 12, "sync": 12, "pylanc": 12, "pyright": 12, "lint": 12, "everyth": [12, 13, 19, 22, 23], "flake8": 12, "flake8path": 12, "autopep8": 12, "path_to": 12, "live": [12, 17], "share": 12, "whiteboard": 12, "load": [12, 16, 19, 20, 24], "read_csv": [12, 16, 17, 18, 19, 20, 21, 22, 23, 24], "githubusercont": [12, 18, 19, 20, 22, 23, 24], "hdi": [12, 19, 22], "csv": [12, 17, 18, 19, 20, 21, 22, 23, 24], "develop": [12, 13, 19, 22], "test_df": [12, 24], "pred": 12, "iloc": [12, 17, 21, 23], "introduc": [12, 18], "stai": [12, 17], "love": 12, "hear": 12, "opinion": 12, "easi": [12, 13, 17, 22], "Being": [12, 19], "team": [12, 16], "anyon": 12, "who": [12, 17], "motiv": 12, "journei": 12, "continu": [12, 13, 17, 19, 21], "read": [12, 17, 19, 20, 21], "democrat": 12, "improv": [12, 13, 17, 21, 24], "propos": [12, 16], "discuss": [12, 19], "submit": 12, "let": [12, 17, 18, 19, 20, 21, 22, 23, 24], "know": [12, 19, 22, 23], "went": 12, "fork": 12, "pull": [12, 13], "git": 12, "workflow": 12, "repositori": 12, "checkout": [12, 18], "branch": [12, 17], "weekli": 12, "ask": [12, 14, 18, 19, 22], "confirm": [12, 19], "commit": 12, "ci": [12, 16], "suit": [12, 16, 18], "local": [12, 16, 23], "style": 12, "remot": 12, "env": 12, "push": 12, "repo": 12, "Be": 12, "latest": [12, 14], "befor": [12, 17], "sign": 12, "cli": 12, "agreement": 12, "under": [12, 14], "gpl": 12, "track": 12, "pr": [12, 13], "regular": 12, "basi": 12, "address": [12, 17], "chanc": 12, "privat": 12, "respond": 12, "feedback": 12, "chat": 12, "join": [12, 17, 21], "announc": 12, "event": [12, 21], "monthli": [12, 23], "newslett": 12, "mission": 12, "becom": 12, "scientist": 12, "project": [12, 13], "particip": 12, "agre": 12, "abid": 12, "term": [12, 13, 17, 22], "arimamix": [12, 14], "basemix": [12, 13, 14, 17, 20, 21], "partial_fit": [12, 14, 17, 19, 20, 21, 23], "etsmix": [12, 14], "neuralt": [12, 14, 23], "prophetmix": [12, 14], "randomforest": [12, 14, 17, 18, 19, 20, 21], "sktime": [12, 14], "tabtransformermix": [12, 14], "xgboostarraymix": [12, 14, 23], "xgboostmix": [12, 14, 17, 18, 19, 20, 21], "introduct": 12, "ii": 12, "iii": 12, "strength": [12, 24], "drawback": 12, "simplest": 13, "languag": 13, "english": [13, 17], "primari": 13, "matric": [13, 19], "video": 13, "three": [13, 17, 19, 21, 24], "cumbersom": 13, "similar": [13, 17], "That": [13, 17, 20, 22], "gist": 13, "intermedi": [13, 19, 20], "prototyp": 13, "librari": [13, 14, 17, 19, 22], "even": [13, 22], "instal": [13, 14, 23], "entail": 13, "suspect": 13, "brief": 13, "instruct": [13, 17, 18, 21], "wherea": [13, 18], "inter": 13, "datatyp": [13, 17], "predominantli": 13, "decid": 13, "whole": 13, "u": [13, 16, 17, 18, 19, 21, 24], "benefit": 13, "extend": [13, 19, 22], "easili": [13, 19, 22], "integr": 13, "minim": [13, 14, 17, 21], "hassl": 13, "accept": 13, "els": [13, 17, 18, 21, 22], "upstream": 13, "advantag": 13, "trivial": 13, "parallel": [13, 17, 21], "bit": [13, 19, 20], "themselv": 13, "built": 13, "citizen": 13, "far": 13, "sens": [13, 17], "hardwar": 13, "care": 13, "wield": 13, "great": [13, 14, 17], "influenc": 13, "joint": 13, "stuff": 13, "propag": 13, "nor": [13, 22, 23], "grant": 13, "hard": 13, "unwieldi": 13, "model_path": 14, "statsforecast": 14, "statsforecastautoarima": 14, "auto_s": 14, "sp": 14, "use_stl": 14, "start_p": 14, "start_q": 14, "max_p": 14, "max_d": 14, "max_q": 14, "max_ord": 14, "season": 14, "stationari": 14, "information_criterion": 14, "kpss": 14, "seasonal_test": 14, "stepwis": 14, "n_job": 14, "start_param": 14, "trend": 14, "maxit": 14, "50": [14, 19, 21, 22, 23, 24], "offset_test_arg": 14, "seasonal_test_arg": 14, "suppress_warn": 14, "error_act": 14, "trace": 14, "random_st": [14, 21, 24], "n_fit": 14, "out_of_sample_s": 14, "mse": 14, "scoring_arg": 14, "with_intercept": 14, "update_pdq": 14, "time_varying_regress": 14, "enforce_stationar": 14, "enforce_invert": 14, "simple_differenc": 14, "measurement_error": 14, "mle_regress": 14, "hamilton_represent": 14, "concentrate_scal": 14, "autoarima": 14, "filter": [14, 17, 21], "bigger": 14, "big": 14, "de": 14, "trender": 14, "backbon": 14, "fulfil": 14, "circumst": 14, "fit_data_len": 14, "trains_onc": [14, 17, 21], "fit_on_dev": [14, 17, 18, 20, 21, 24], "post": [14, 17, 19, 21], "portion": 14, "mistak": 14, "dev_data": [14, 17, 18, 20, 21, 24], "partial": [14, 17, 20, 21], "somewhat": [14, 17], "aim": [14, 17, 18], "autoet": 14, "damped_trend": 14, "initialization_method": 14, "initial_level": 14, "initial_trend": 14, "initial_season": 14, "aic": 14, "allow_multiplicative_trend": 14, "restrict": 14, "additive_onli": 14, "ignore_inf_": 14, "target_encod": [14, 17, 20, 21], "net": [14, 17, 21], "search_hyperparamet": [14, 17, 18, 20, 21, 24], "n_epoch": 14, "lr": 14, "connect": 14, "dens": 14, "deafultnet": 14, "arnet": 14, "hyperparamet": 14, "search": [14, 17, 21, 22], "supersed": 14, "augment": [14, 17], "nr": 14, "took": 14, "subclass": 14, "scenario": [14, 18], "add_season": 14, "add_country_holidai": 14, "growth": 14, "growth_floor": 14, "growth_cap": 14, "changepoint": 14, "n_changepoint": 14, "25": [14, 19, 22, 23, 24], "changepoint_rang": 14, "yearly_season": 14, "weekly_season": 14, "daily_season": 14, "holidai": 14, "seasonality_mod": 14, "seasonality_prior_scal": 14, "holidays_prior_scal": 14, "changepoint_prior_scal": 14, "mcmc_sampl": 14, "uncertainty_sampl": 14, "prophet": 14, "use_optuna": [14, 17, 21], "sklearn": [14, 19, 20, 21, 24], "randomforestregressor": 14, "randomforestclassifi": [14, 20], "optuna": 14, "speed": 14, "too": 14, "slow": 14, "ridg": 14, "linear_model": 14, "ordinari": 14, "least": 14, "squar": 14, "ol": 14, "hood": 14, "w_1": 14, "w_2": 14, "w_n": 14, "model_kwarg": 14, "hyperparam_search": 14, "exhibit": [14, 22], "due": [14, 21], "tri": [14, 20, 22], "mark": 14, "practic": 14, "spawn": 14, "smape": 14, "enforc": [14, 17, 18], "miscellan": 14, "arima": 14, "paramt": 14, "model_class": 14, "compli": 14, "immedi": 14, "becaus": [14, 21, 23], "train_arg": 14, "tabtransform": 14, "ft": [14, 18], "skip": [14, 20, 23], "input_col": [14, 17, 19, 21], "xgboost": [14, 19, 23], "intend": [14, 17, 21], "boost": 14, "good": [14, 19, 24], "rounder": 14, "tree": 14, "supervis": [14, 21], "tabular": 14, "regard": [14, 19], "apart": [14, 19, 23], "booster": 14, "technic": 14, "paper": 14, "scalabl": 14, "2016": [14, 18], "think": [14, 22], "caveat": [14, 23], "awar": [14, 22], "seek": 14, "reg": 14, "squarederror": 14, "loss": [14, 19, 23, 24], "multiclass": 14, "multi": 14, "coupl": [14, 18, 23], "backlog": 14, "soon": [14, 17], "deem": 14, "fast": 14, "enough": 14, "preprocessor": 15, "design": [15, 18, 19, 22], "keep": [16, 17, 21, 23, 24], "preserv": 16, "reader": 16, "saniti": [16, 21], "behav": [16, 17], "extern": 16, "link": [16, 18, 21], "download": [16, 17, 21, 23], "contact": 16, "believ": 16, "writefil": [16, 17, 18, 19, 20, 21], "my_fil": 16, "py": [16, 17, 18, 19, 20, 21, 23, 24], "top": 16, "jupyt": [16, 17, 21], "codeblock": 16, "ok": [16, 19, 22], "realli": [16, 22], "metadata": 16, "action": [16, 19], "grep": 16, "kernel": 16, "find": [16, 18], "ipynb": 16, "accompani": 16, "png": 16, "jpg": 16, "reject": 16, "happi": 16, "adapt": 16, "notebook": [17, 18, 21, 23], "below": [17, 18, 21], "ll": [17, 18, 19, 20, 21, 22, 23], "explor": [17, 22], "protocol": 17, "highlight": 17, "kaggl": [17, 18, 21], "ultim": 17, "readabl": 17, "url_leg": 17, "among": [17, 22, 23], "excerpt": 17, "word": 17, "nltk": [17, 21], "challeng": 17, "meaning": 17, "demonstr": 17, "proce": 17, "power": 17, "np": [17, 19, 21, 22, 24], "o": [17, 21], "sy": [17, 21], "lw": [17, 18, 21], "2500": 17, "torchvis": [17, 18, 19, 20, 21, 22, 23, 24], "pillow": [17, 18, 19, 20, 21, 22, 23, 24], "datasci": 17, "manner": [17, 19], "folder": [17, 21], "s3": [17, 21], "eu": [17, 21], "west": [17, 21], "amazonaw": [17, 21], "zip": [17, 21, 23], "head": [17, 18, 21, 22], "standard_error": 17, "c12129c31": 17, "young": 17, "peopl": 17, "ballroom": 17, "340259": 17, "464009": 17, "85aa80a4c": 17, "dinner": 17, "mr": 17, "fayr": 17, "somewh": 17, "315372": 17, "480805": 17, "b69ac6792": 17, "roger": 17, "had": 17, "snow": 17, "depart": 17, "q": 17, "580118": 17, "476676": 17, "dd1000b26": 17, "And": [17, 19], "palac": 17, "garden": 17, "054013": 17, "450007": 17, "37c1b32fb": 17, "upon": 17, "bear": 17, "li": 17, "247197": 17, "510845": 17, "aptli": 17, "tell": [17, 19, 20], "throw": [17, 20], "awai": 17, "line": [17, 18], "setup": [17, 19, 21], "drop": [17, 21], "39": [17, 18, 19, 20, 21, 22, 23, 24], "2478": 17, "2834": 17, "87": [17, 19, 23, 24], "34": [17, 18, 19, 20, 21, 23, 24], "hash": 17, "finish": [17, 18, 19, 20, 21, 22, 23, 24], "piec": [17, 19, 20], "notic": [17, 19, 22], "rich_text": 17, "21384": [17, 18], "85536": [17, 18], "6543071269989": 17, "259200": [17, 18, 20, 21], "r2_score": [17, 18, 24], "lastli": [17, 21], "ingredi": [17, 22], "off": [17, 21], "ground": [17, 21], "mycustomclean": [17, 21], "inspir": 17, "companion": 17, "broader": [17, 19], "ecosystem": [17, 22], "theori": 17, "irregular": 17, "strip": 17, "unwant": 17, "omit": [17, 21], "complet": [17, 18, 22, 24], "borrow": 17, "invit": 17, "get_cleaning_func": 17, "custom_cleaning_funct": 17, "corpu": 17, "stopword": 17, "stop_word": 17, "_remove_column": 17, "_get_columns_to_clean": 17, "values_for_nan_and_none_in_panda": 17, "def": [17, 18, 19, 20, 21], "malform": 17, "noqa": [17, 18], "col": [17, 21, 22, 23], "fn": 17, "vec": 17, "short_text": 17, "lambda": [17, 18, 23], "to_replac": 17, "script": [17, 18, 19, 21], "load_custom_modul": [17, 18, 19, 20, 21], "lightweight": [17, 19, 21, 22], "could": [17, 20, 21], "keyword": [17, 21], "wonder": 17, "ve": [17, 18, 19, 21], "simpli": [17, 21], "modular": 17, "custom_cleaner_pipelin": 17, "fp": [17, 21], "__version__": [17, 19, 21], "lightwood_vers": [17, 21], "moduletyp": [17, 21], "importlib": [17, 21], "machineri": [17, 21], "import_dir": [17, 21], "expandus": [17, 21], "_": [17, 20, 21, 23], "r_ok": [17, 21], "file_nam": [17, 21], "walk": [17, 21], "mod_nam": [17, 21], "loader": [17, 21], "sourcefileload": [17, 21], "exec_modul": [17, 21], "exec": [17, 21], "f": [17, 20, 21, 22, 24], "inact": [17, 21], "runtime_log": [17, 21], "feature_cach": [17, 21], "timed_predictor": [17, 21], "gt": [17, 19, 21], "train_test_data": [17, 21], "pct_train": [17, 21], "pct_dev": [17, 21], "pct_test": [17, 21], "concatenated_train_dev": [17, 21], "prepped_encod": [17, 21], "parallel_encod": [17, 21], "parallel_encoding_check": [17, 21], "debug": [17, 18, 19, 20, 21, 23, 24], "item": [17, 18, 21, 22], "mut_method_cal": [17, 21], "hasattr": [17, 21], "uses_target": [17, 21], "feature_data": [17, 21], "stratified_on": [17, 21], "featurized_split": [17, 21], "filtered_subset": [17, 21], "filter_t": [17, 21], "_filter": [17, 21], "encoded_train_data": [17, 21], "encoded_dev_data": [17, 21], "encoded_test_data": [17, 21], "test_filt": [17, 21], "defaultnet": [17, 21], "trained_mix": [17, 21], "fit_mix": [17, 19, 20, 21, 23, 24], "append": [17, 19, 20, 21], "dirti": [17, 21], "hack": [17, 21], "n_phase": [17, 21], "train_dev_test": [17, 21], "enc_train_test": [17, 21], "evolv": [17, 21], "henc": [17, 21], "reserv": [17, 18, 21], "TO": [17, 21], "learn_cal": [17, 21], "abort": [17, 21], "again": [17, 21], "predict_data": [17, 21], "_timed_cal": [17, 20, 21, 23, 24], "transpar": [17, 21, 24], "goe": [17, 21], "familiar": [17, 21], "give": [17, 21, 22, 24], "9": [17, 18, 19, 20, 21, 22, 23, 24], "cleaned_data": [17, 18, 21], "09": [17, 20, 23], "12": [17, 19, 22, 23], "000000": [17, 24], "silent": 17, "quickli": [17, 21], "came": [17, 19], "wall": 17, "round": [17, 19, 22, 24], "hou": 17, "033": 17, "1m": 17, "0m": 17, "ntarget": 17, "nclean": 17, "decidedli": 17, "appear": [17, 21], "interior": 17, "scene": 17, "winter": 17, "landscap": 17, "floor": 17, "cover": 17, "white": 17, "canva": 17, "laid": 17, "smoothli": 17, "rumpl": 17, "bump": [17, 21], "hillock": 17, "real": 17, "palm": 17, "evergreen": 17, "decor": 17, "room": 17, "powder": 17, "flour": 17, "strewn": 17, "tuft": 17, "cotton": 17, "diamond": 17, "dust": 17, "lightli": 17, "sprinkl": 17, "glitter": 17, "crystal": 17, "icicl": 17, "hung": 17, "At": 17, "beauti": 17, "skin": 17, "rug": 17, "prize": 17, "girl": 17, "boi": 17, "game": 17, "gather": 17, "north": 17, "pole": 17, "south": 17, "player": 17, "plant": 17, "matter": 17, "travel": 17, "oblig": 17, "wear": 17, "snowsho": 17, "340259125": 17, "cut": 17, "hope": [17, 21], "docssrc": [17, 21], "custom_clean": 17, "experi": [18, 24], "mycolumndata": 18, "appl": 18, "orang": 18, "banana": 18, "dragonfruit": 18, "arrang": 18, "alphabet": 18, "myfeaturedata": 18, "car": 18, "sale": 18, "sell": 18, "2469": 18, "filenam": 18, "used_car_pric": 18, "price": 18, "transmiss": 18, "mileag": 18, "fueltyp": 18, "tax": 18, "mpg": 18, "engines": 18, "a1": 18, "2017": 18, "12500": 18, "15735": 18, "petrol": 18, "150": [18, 19], "55": [18, 19, 23], "a6": 18, "16500": 18, "36203": 18, "diesel": 18, "64": [18, 19], "11000": 18, "29946": 18, "30": [18, 19, 20, 23, 24], "a4": 18, "16800": 18, "25952": 18, "145": [18, 19], "67": [18, 19, 24], "a3": 18, "17300": 18, "1998": 18, "49": [18, 19, 21], "6": [18, 19, 20, 22, 23, 24], "hand": [18, 22, 23], "datapoint": 18, "6920": 18, "10668": 18, "613397836685181": 18, "revert": 18, "mostli": [18, 21], "ones": [18, 22], "satisfi": 18, "success": 18, "dedic": 18, "although": [18, 21], "2021": 18, "13": [18, 19, 22, 23], "organ": 18, "labeldict": 18, "associ": [18, 23], "label_dict": 18, "ilabel_dict": 18, "cat": 18, "idx": 18, "enumer": 18, "isinst": [18, 19], "enc": 18, "tolist": [18, 20], "unsqueez": 18, "dimension": 18, "lightwood_modul": [18, 19, 20], "switch": 18, "directli": [18, 22], "examin": 18, "data_dtyp": 18, "programat": 18, "simplic": 18, "ft_data": 18, "66": [18, 19, 21, 24], "02": [18, 20, 23, 24], "91": [18, 19], "pick": [18, 19, 20, 23, 24], "enc_ft": 18, "squeez": 18, "n_output_dim": 18, "orig_data": 18, "compare_data": 18, "encdata": 18, "axi": 18, "inspect": 18, "11": [18, 19, 22, 23], "hybrid": 18, "guid": 18, "essenti": [19, 22], "spectrum": [19, 22], "customiz": [19, 22], "come": [19, 22, 23, 24], "thank": 19, "deal": 19, "correl": 19, "heatmap": 19, "2533": 19, "Or": 19, "modelcorrelationheatmap": 19, "super": [19, 20], "__main__": 19, "0x7fc55d683bb0": 19, "newli": [19, 24], "exactli": [19, 20], "parent": 19, "okai": [19, 23], "fun": 19, "idea": [19, 24], "normal_predict": 19, "encoded_val_data": 19, "is_classif": 19, "is_numer": 19, "is_multi_t": 19, "ts_cfg": 19, "has_pretrained_text_enc": 19, "lot": 19, "model_correl": 19, "simplenamespac": 19, "all_predict": 19, "flatten": 19, "astyp": 19, "calcul": 19, "corr": 19, "corrcoef": 19, "mixer_correl": 19, "dot": 19, "notat": 19, "accessor": 19, "fairli": [19, 22, 24], "straightforward": 19, "home": [19, 23], "usernam": 19, "maco": 19, "linux": 19, "scan": 19, "wrote": 19, "compos": 19, "222": [19, 22], "98": [19, 20, 22], "area": [19, 22], "sq": [19, 22], "mi": [19, 22], "pop": [19, 22], "densiti": [19, 22], "gdp": [19, 22], "capita": [19, 22], "literaci": [19, 22], "infant": [19, 22], "mortal": [19, 22], "03": [19, 20, 23, 24], "07": [19, 20, 23], "hostedtoolcach": [19, 20, 23, 24], "18": [19, 20, 21, 22, 23, 24], "x64": [19, 20, 23, 24], "lib": [19, 20, 23, 24], "site": [19, 20, 23, 24], "grad_scal": [19, 23, 24], "120": [19, 23, 24], "userwarn": [19, 20, 23, 24], "gradscal": [19, 23, 24], "pytorch_rang": [19, 23, 24], "ranger": [19, 23, 24], "172": [19, 23, 24], "overload": [19, 23, 24], "addcmul_": [19, 23, 24], "tensor1": [19, 23, 24], "tensor2": [19, 23, 24], "signatur": [19, 23, 24], "csrc": [19, 23, 24], "python_arg_pars": [19, 23, 24], "cpp": [19, 23, 24], "1485": [19, 23, 24], "exp_avg_sq": [19, 23, 24], "mul_": [19, 23, 24], "beta2": [19, 23, 24], "grad": [19, 23, 24], "69619870185852": 19, "0001": [19, 23, 24], "16": [19, 20, 23], "938914895057678": 19, "0005": [19, 23, 24], "19737732410431": 19, "001": [19, 23, 24], "064818739891052": 19, "002": [19, 23, 24], "472004771232605": 19, "003": [19, 23, 24], "28026568889618": 19, "005": [19, 23, 24], "26": [19, 23, 24], "74676263332367": 19, "101": 19, "83524298667908": 19, "319209098815918": 19, "3220210075378418": 19, "3063431978225708": 19, "22": [19, 23, 24], "19": [19, 20, 22, 23, 24], "src": [19, 23], "learner": [19, 23], "cc": [19, 23], "339": [19, 23], "visibl": [19, 23], "gpu_id": [19, 23], "2932535409927368": 19, "2823516130447388": 19, "2705543041229248": 19, "2418551445007324": 19, "2208322286605835": 19, "1978285312652588": 19, "17814302444458": 19, "1615049839019775": 19, "1442030668258667": 19, "1058541536331177": 19, "14": [19, 23], "0935648679733276": 19, "0802721977233887": 19, "0696258544921875": 19, "17": [19, 22, 23, 24], "0607415437698364": 19, "049390435218811": 19, "020617961883545": 19, "0081788301467896": 19, "21": [19, 20, 23, 24], "9943332672119141": 19, "9842473864555359": 19, "9762145280838013": 19, "9653866291046143": 19, "9380741715431213": 19, "9271669387817383": 19, "27": [19, 23], "9147073030471802": 19, "28": [19, 23, 24], "9064992070198059": 19, "29": [19, 21, 22], "9001222252845764": 19, "8903173208236694": 19, "31": [19, 20, 21, 23, 24], "8648636937141418": 19, "32": [19, 23], "8549227118492126": 19, "33": [19, 23, 24], "843436598777771": 19, "8365356922149658": 19, "35": [19, 22, 23], "831310510635376": 19, "36": 19, "8222442269325256": 19, "37": 19, "7981724143028259": 19, "38": 19, "789170503616333": 19, "7787192463874817": 19, "40": [19, 22, 24], "7730110287666321": 19, "41": [19, 24], "7687098383903503": 19, "42": [19, 23], "7602015137672424": 19, "43": [19, 20, 22, 23, 24], "737326979637146": 19, "44": [19, 23], "7292225956916809": 19, "45": 19, "7197890281677246": 19, "46": 19, "7151773571968079": 19, "47": [19, 22], "7117206454277039": 19, "48": [19, 24], "7038285732269287": 19, "6820732355117798": 19, "6746437549591064": 19, "51": [19, 23], "6659625172615051": 19, "52": [19, 24], "6620771288871765": 19, "53": [19, 23], "6590714454650879": 19, "54": 19, "6515910029411316": 19, "630807638168335": 19, "56": [19, 22], "624198853969574": 19, "57": 19, "6163835525512695": 19, "58": [19, 23], "6131908893585205": 19, "59": 19, "6106153726577759": 19, "60": [19, 22], "6036757230758667": 19, "61": [19, 22], "5848420262336731": 19, "62": [19, 21, 23], "5793874263763428": 19, "63": [19, 20], "5726664066314697": 19, "5703644156455994": 19, "65": [19, 24], "5684639811515808": 19, "5622178912162781": 19, "5449514389038086": 19, "68": [19, 24], "5401746034622192": 19, "69": [19, 21], "5341062545776367": 19, "70": [19, 23, 24], "5322306752204895": 19, "71": [19, 23], "5305426716804504": 19, "72": [19, 24], "5246546268463135": 19, "73": [19, 24], "5083625912666321": 19, "74": [19, 23], "5040706992149353": 19, "75": [19, 24], "49863338470458984": 19, "76": [19, 22, 23, 24], "4971727430820465": 19, "77": 19, "49564695358276367": 19, "78": [19, 24], "490094393491745": 19, "79": [19, 23, 24], "474732369184494": 19, "4708785116672516": 19, "81": [19, 24], "46578508615493774": 19, "82": [19, 22], "46444958448410034": 19, "83": 19, "4629424512386322": 19, "84": 19, "4576237201690674": 19, "85": [19, 23, 24], "44295957684516907": 19, "86": [19, 22], "4393518269062042": 19, "43465593457221985": 19, "88": 19, "4335816502571106": 19, "89": [19, 22], "4323108494281769": 19, "90": [19, 24], "4275365471839905": 19, "41426026821136475": 19, "92": [19, 22], "41132852435112": 19, "93": [19, 22], "40746206045150757": 19, "94": 19, "40697813034057617": 19, "95": [19, 22, 24], "40621599555015564": 19, "96": 19, "4020925462245941": 19, "97": [19, 22, 24], "39044293761253357": 19, "38795435428619385": 19, "3844752311706543": 19, "38413092494010925": 19, "3833678662776947": 19, "102": [19, 22], "3795609176158905": 19, "103": [19, 24], "3688462972640991": 19, "104": 19, "3664618134498596": 19, "105": 19, "36335450410842896": 19, "106": 19, "3631647229194641": 19, "107": 19, "36252129077911377": 19, "108": 19, "35901498794555664": 19, "109": 19, "34912464022636414": 19, "110": 19, "3469705581665039": 19, "111": 19, "3441269099712372": 19, "112": 19, "34397509694099426": 19, "113": 19, "3432472348213196": 19, "114": 19, "339950293302536": 19, "115": 19, "33083972334861755": 19, "116": 19, "32890695333480835": 19, "117": [19, 21], "3262707591056824": 19, "118": 19, "32614049315452576": 19, "119": 19, "32546767592430115": 19, "32241353392601013": 19, "121": 19, "31401750445365906": 19, "122": 19, "312200129032135": 19, "123": [19, 21], "3098318874835968": 19, "124": 19, "30980274081230164": 19, "125": 19, "30903807282447815": 19, "126": [19, 22], "30612173676490784": 19, "127": 19, "29817795753479004": 19, "128": 19, "29647037386894226": 19, "129": 19, "294295072555542": 19, "130": 19, "2941862642765045": 19, "131": 19, "293437123298645": 19, "132": 19, "2907316982746124": 19, "133": 19, "2835603356361389": 19, "134": 19, "28203096985816956": 19, "135": 19, "2801097333431244": 19, "136": 19, "2801356315612793": 19, "137": [19, 23], "27944374084472656": 19, "138": 19, "27698856592178345": 19, "139": 19, "27050134539604187": 19, "140": 19, "26896238327026367": 19, "141": 19, "26712533831596375": 19, "142": 19, "2672237455844879": 19, "143": [19, 22], "26658424735069275": 19, "144": 19, "26435399055480957": 19, "25857552886009216": 19, "146": 19, "25719374418258667": 19, "147": 19, "25569668412208557": 19, "148": 19, "25572681427001953": 19, "149": [19, 21], "25494885444641113": 19, "25275036692619324": 19, "151": 19, "24737949669361115": 19, "152": [19, 23], "2459435611963272": 19, "153": 19, "2445347160100937": 19, "154": 19, "2445467710494995": 19, "155": 19, "24369145929813385": 19, "156": 19, "2416132241487503": 19, "157": 19, "23684009909629822": 19, "158": 19, "23561865091323853": 19, "159": 19, "23429155349731445": 19, "160": 19, "23432205617427826": 19, "161": 19, "23341742157936096": 19, "162": 19, "23142266273498535": 19, "163": 19, "22705042362213135": 19, "164": 19, "22584649920463562": 19, "165": 19, "224551260471344": 19, "166": 19, "22450262308120728": 19, "167": 19, "22357773780822754": 19, "168": 19, "22173109650611877": 19, "169": 19, "2178671807050705": 19, "170": 19, "21670010685920715": 19, "171": 19, "21560637652873993": 19, "21557921171188354": 19, "173": 19, "2146444469690323": 19, "174": 19, "21294169127941132": 19, "175": 19, "20955859124660492": 19, "176": 19, "2083672285079956": 19, "177": 19, "2073107212781906": 19, "178": 19, "20724600553512573": 19, "179": 19, "20629315078258514": 19, "180": 19, "20468899607658386": 19, "181": 19, "20165233314037323": 19, "182": 19, "20049341022968292": 19, "183": 19, "19955016672611237": 19, "184": 19, "1995530128479004": 19, "185": 19, "19859401881694794": 19, "186": 19, "19707520306110382": 19, "187": 19, "1942995935678482": 19, "188": 19, "1931121051311493": 19, "189": 19, "19222992658615112": 19, "190": 19, "1921914666891098": 19, "191": 19, "19117805361747742": 19, "192": 19, "18969029188156128": 19, "193": 19, "187184676527977": 19, "194": 19, "18603971600532532": 19, "195": 19, "18526169657707214": 19, "196": 19, "18519815802574158": 19, "197": 19, "18416985869407654": 19, "198": 19, "18277066946029663": 19, "199": 19, "18061845004558563": 19, "17954562604427338": 19, "201": [19, 24], "17882634699344635": 19, "202": [19, 24], "178827702999115": 19, "203": [19, 24], "17785540223121643": 19, "204": [19, 24], "17651638388633728": 19, "205": [19, 24], "17452320456504822": 19, "206": [19, 24], "17357748746871948": 19, "207": 19, "17280830442905426": 19, "208": 19, "17277377843856812": 19, "209": [19, 23], "1717786192893982": 19, "210": 19, "1704777032136917": 19, "211": 19, "16871954500675201": 19, "212": [19, 22], "1677308976650238": 19, "213": 19, "16711454093456268": 19, "214": 19, "1670701801776886": 19, "215": 19, "1661018282175064": 19, "216": 19, "16485735774040222": 19, "217": 19, "1633657068014145": 19, "218": 19, "16241708397865295": 19, "219": 19, "16175413131713867": 19, "220": 19, "16167216002941132": 19, "221": 19, "16063964366912842": 19, "15946900844573975": 19, "223": 19, "15806639194488525": 19, "15705840289592743": 19, "1564527302980423": 19, "226": 19, "1563638299703598": 19, "227": 19, "1553557813167572": 19, "228": 19, "15419968962669373": 19, "15289197862148285": 19, "230": 19, "1519194096326828": 19, "231": 19, "15123619139194489": 19, "232": 19, "15118639171123505": 19, "233": [19, 24], "15018051862716675": 19, "234": 19, "1491018533706665": 19, "235": 19, "14809657633304596": 19, "236": 19, "14715126156806946": 19, "237": 19, "1465958207845688": 19, "238": [19, 24], "14650698006153107": 19, "239": 19, "14550118148326874": 19, "240": 19, "14443543553352356": 19, "241": 19, "1434621661901474": 19, "242": 19, "14250728487968445": 19, "243": 19, "14185748994350433": 19, "244": 19, "14189746975898743": 19, "245": 19, "1409161239862442": 19, "246": 19, "13993702828884125": 19, "247": 19, "1391299068927765": 19, "248": 19, "13832925260066986": 19, "249": 19, "1378500610589981": 19, "250": 19, "1377183049917221": 19, "251": 19, "13678807020187378": 19, "252": 19, "1358783096075058": 19, "253": 19, "13523904979228973": 19, "254": 19, "13428939878940582": 19, "255": 19, "1337854564189911": 19, "256": 19, "13372103869915009": 19, "257": 19, "13272902369499207": 19, "258": 19, "13185538351535797": 19, "259": 19, "1313582956790924": 19, "260": 19, "13045552372932434": 19, "261": 19, "12983864545822144": 19, "262": 19, "12984782457351685": 19, "263": 19, "1288401484489441": 19, "264": 19, "1279887855052948": 19, "265": 19, "12758101522922516": 19, "266": 19, "12667666375637054": 19, "267": 19, "12612603604793549": 19, "268": 19, "12610751390457153": 19, "269": 19, "12513335049152374": 19, "270": 19, "1243751272559166": 19, "271": 19, "12412182241678238": 19, "272": 19, "1230584904551506": 19, "273": 19, "12271980941295624": 19, "274": 19, "12266436964273453": 19, "275": 19, "12178036570549011": 19, "276": 19, "12101858854293823": 19, "277": 19, "12087203562259674": 19, "278": 19, "1200181320309639": 19, "279": 19, "11943934857845306": 19, "280": 19, "11954695731401443": 19, "281": 19, "11862372606992722": 19, "282": [19, 23], "11791976541280746": 19, "283": 19, "11785109341144562": 19, "284": 19, "11687864363193512": 19, "285": 19, "11643724143505096": 19, "286": 19, "11642208695411682": 19, "287": 19, "11557886749505997": 19, "288": 19, "11486727744340897": 19, "289": 19, "11486268043518066": 19, "290": 19, "11395276337862015": 19, "291": 19, "11360616236925125": 19, "292": 19, "11355218291282654": 19, "293": 19, "1126832664012909": 19, "294": [19, 22, 23], "11205550283193588": 19, "295": 19, "1121935173869133": 19, "296": 19, "11124672740697861": 19, "297": 19, "1107482835650444": 19, "298": [19, 20], "11090409755706787": 19, "299": 19, "10998082906007767": 19, "300": 19, "10938509553670883": 19, "301": 19, "10963384062051773": 19, "302": 19, "10862202197313309": 19, "303": [19, 20, 24], "10821786522865295": 19, "304": 19, "10827197879552841": 19, "305": 19, "10738728940486908": 19, "306": 19, "10684175044298172": 19, "307": 19, "10706086456775665": 19, "308": 19, "10607397556304932": 19, "309": 19, "10581554472446442": 19, "310": 19, "10571634024381638": 19, "311": 19, "10497451573610306": 19, "312": 19, "10435424000024796": 19, "313": 19, "10442733019590378": 19, "314": 19, "10375964641571045": 19, "315": 19, "10312777012586594": 19, "316": 19, "10335934162139893": 19, "317": 19, "10242770612239838": 19, "318": 19, "10183034092187881": 19, "319": 19, "10210154205560684": 19, "320": 19, "10123074799776077": 19, "321": 19, "1009015440940857": 19, "322": 19, "10092490911483765": 19, "323": 19, "10005296021699905": 19, "324": 19, "09947216510772705": 19, "325": [19, 22], "09976830333471298": 19, "326": 19, "09909471124410629": 19, "327": 19, "0984896644949913": 19, "328": 19, "09872526675462723": 19, "329": 19, "09776049852371216": 19, "330": 19, "09726265072822571": 19, "331": 19, "09759583324193954": 19, "332": 19, "0968780443072319": 19, "333": 19, "09633392840623856": 19, "334": 19, "09660089015960693": 19, "335": 19, "09565741568803787": 19, "336": 19, "09534844011068344": 19, "337": 19, "095916748046875": 19, "338": 19, "0948340892791748": 19, "0947742834687233": 19, "340": 19, "09466628730297089": 19, "341": 19, "09391016513109207": 19, "342": 19, "09345199167728424": 19, "343": 19, "09402826428413391": 19, "344": 19, "09328310936689377": 19, "345": 19, "09269453585147858": 19, "346": 19, "09304331243038177": 19, "347": 19, "09203693270683289": 19, "348": 19, "09168851375579834": 19, "349": 19, "09228367358446121": 19, "350": 19, "0915522351861": 19, "351": 19, "09102670103311539": 19, "352": 19, "0913388580083847": 19, "353": 19, "09047925472259521": 19, "354": 19, "09006236493587494": 19, "355": 19, "09044031798839569": 19, "356": 19, "08988122642040253": 19, "357": 19, "08946087211370468": 19, "358": 19, "08965874463319778": 19, "359": 19, "0888485535979271": 19, "360": 19, "08855389803647995": 19, "361": 19, "0890861302614212": 19, "362": 19, "08827497065067291": 19, "363": 19, "08809749782085419": 19, "364": 19, "08808000385761261": 19, "365": 19, "08743494749069214": 19, "366": 19, "08708076179027557": 19, "367": 19, "08756349235773087": 19, "368": 19, "08706008642911911": 19, "369": 19, "08658093959093094": 19, "370": 19, "08679566532373428": 19, "371": 19, "08599664270877838": 19, "372": 19, "08568374812602997": 19, "373": 19, "08624488860368729": 19, "374": 19, "0856078490614891": 19, "375": 19, "08522365242242813": 19, "376": 19, "08551666885614395": 19, "377": 19, "08472632616758347": 19, "378": [19, 21], "08439406007528305": 19, "379": 19, "08481989800930023": 19, "380": 19, "08446784317493439": 19, "381": 19, "08382831513881683": 19, "382": 19, "08423423022031784": 19, "383": 19, "08336041122674942": 19, "384": 19, "08313442021608353": 19, "385": 19, "0837632417678833": 19, "386": 19, "08309761434793472": 19, "387": 19, "08267384767532349": 19, "388": 19, "0828978642821312": 19, "389": 19, "082110695540905": 19, "390": 19, "08183476328849792": 19, "391": 19, "08243558555841446": 19, "392": 19, "08161097019910812": 19, "393": 19, "08142141252756119": 19, "394": 19, "08149602264165878": 19, "395": 19, "08084908872842789": 19, "396": 19, "08050354570150375": 19, "397": 19, "08095331490039825": 19, "398": 19, "080575130879879": 19, "399": 19, "0798686295747757": 19, "400": 19, "08038412779569626": 19, "401": 19, "07940841466188431": 19, "402": 19, "07922087609767914": 19, "403": 19, "07983860373497009": 19, "404": 19, "07922542095184326": 19, "405": 19, "07908934354782104": 19, "07910958677530289": 19, "407": 19, "07836276292800903": 19, "408": 19, "07811447978019714": 19, "409": 19, "07887250185012817": 19, "410": 19, "07818076014518738": 19, "411": 19, "07778346538543701": 19, "412": 19, "07812387496232986": 19, "413": 19, "07729979604482651": 19, "414": 19, "07703039795160294": 19, "415": 19, "0775948017835617": 19, "416": 19, "07713817059993744": 19, "417": 19, "07681391388177872": 19, "418": 19, "07715681195259094": 19, "419": 19, "07631205767393112": 19, "420": 19, "07606346905231476": 19, "421": 19, "07675233483314514": 19, "422": 19, "07629571110010147": 19, "423": 19, "07563795894384384": 19, "424": 19, "07611526548862457": 19, "425": 19, "07533487677574158": 19, "426": 19, "07509613037109375": 19, "427": 19, "07571545988321304": 19, "428": [19, 24], "0754358321428299": 19, "429": 19, "07482884079217911": 19, "430": 19, "07524377852678299": 19, "431": 19, "07429002970457077": 19, "432": 19, "07419539988040924": 19, "433": 19, "07500011473894119": 19, "434": 19, "07438388466835022": 19, "435": 19, "07411319017410278": 19, "436": 19, "07419628649950027": 19, "437": 19, "07358112186193466": 19, "438": 19, "07332363724708557": 19, "439": 19, "07389229536056519": 19, "440": 19, "07359040528535843": 19, "441": 19, "07302524894475937": 19, "442": 19, "07347498834133148": 19, "443": 19, "07259897887706757": 19, "444": 19, "07243702560663223": 19, "445": 19, "07312344014644623": 19, "446": 19, "07268182188272476": 19, "447": 19, "07225970178842545": 19, "448": 19, "07257841527462006": 19, "449": 19, "07185488939285278": 19, "450": 19, "07171981036663055": 19, "451": 19, "07245618849992752": 19, "452": 19, "07208308577537537": 19, "453": 19, "07170210033655167": 19, "454": 19, "07196705788373947": 19, "455": 19, "07120276242494583": 19, "07103625684976578": 19, "457": 19, "07185985147953033": 19, "458": 19, "0713714212179184": 19, "459": 19, "07087066769599915": 19, "460": 19, "07120701670646667": 19, "461": 19, "07059141248464584": 19, "462": 19, "07045168429613113": 19, "463": 19, "07111048698425293": 19, "464": 19, "07072890549898148": 19, "465": 19, "07020792365074158": 19, "466": 19, "07070178538560867": 19, "467": 19, "06992365419864655": 19, "468": 19, "06976457685232162": 19, "469": 19, "07043813169002533": 19, "470": 19, "07014822959899902": 19, "471": 19, "06952468305826187": 19, "472": 19, "06991426646709442": 19, "473": 19, "06919951736927032": 19, "474": 19, "06912828981876373": 19, "475": 19, "06984790414571762": 19, "476": 19, "06960425525903702": 19, "477": 19, "06904243677854538": 19, "478": 19, "06946712732315063": 19, "479": 19, "06875824183225632": 19, "480": 19, "06865718960762024": 19, "481": 19, "0694674402475357": 19, "482": 19, "06911814212799072": 19, "483": 19, "06847796589136124": 19, "484": 19, "06896881759166718": 19, "06819576770067215": 19, "486": 19, "06802456825971603": 19, "487": 19, "06886005401611328": 19, "488": 19, "06855729967355728": 19, "489": 19, "0681217685341835": 19, "490": 19, "0682615414261818": 19, "491": 19, "06777814030647278": 19, "492": 19, "0676778182387352": 19, "493": 19, "068417988717556": 19, "494": 19, "06839025020599365": 19, "495": 19, "06749897450208664": 19, "496": 19, "06801498681306839": 19, "497": 19, "06723898649215698": 19, "498": 19, "06719744205474854": 19, "499": 19, "06791235506534576": 19, "500": [19, 22], "0675811618566513": 19, "501": 19, "06700922548770905": 19, "502": 19, "06755012273788452": 19, "503": 19, "06668032705783844": 19, "504": 19, "06652387976646423": 19, "505": 19, "06725572049617767": 19, "506": 19, "06722380220890045": 19, "507": 19, "06651785224676132": 19, "508": 19, "06697070598602295": 19, "509": 19, "06612981855869293": 19, "510": 19, "06597645580768585": 19, "511": 19, "06682397425174713": 19, "512": 19, "06633330136537552": 19, "513": 19, "06584996730089188": 19, "514": 19, "06643113493919373": 19, "515": 19, "065700002014637": 19, "516": 19, "06555479019880295": 19, "517": 19, "06629247963428497": 19, "518": 19, "06603439897298813": 19, "519": 19, "06535287201404572": 19, "520": 19, "06604065746068954": 19, "521": 19, "065196692943573": 19, "522": 19, "0650477334856987": 19, "523": 19, "06583759933710098": 19, "524": 19, "06546703726053238": 19, "525": 19, "06492779403924942": 19, "526": 19, "06546222418546677": 19, "527": 19, "06481875479221344": 19, "528": 19, "06460757553577423": 19, "529": 19, "06533750146627426": 19, "530": 19, "06515196710824966": 19, "531": 19, "06441511958837509": 19, "532": 19, "06514888256788254": 19, "533": 19, "06433605402708054": 19, "534": 19, "06425222754478455": 19, "535": 19, "06495639681816101": 19, "536": 19, "06466779857873917": 19, "537": 19, "06424374878406525": 19, "03624167181551456": 19, "03689871802926063": 19, "0362080242484808": 19, "04127320684492588": 19, "041033745557069776": 19, "03662097416818142": 19, "03708564639091492": 19, "validation_0": [19, 23], "mlogloss": 19, "87768": 19, "gbm": [19, 23], "478874678611756": 19, "constraint": [19, 23], "60595": 19, "43263": 19, "31488": 19, "23226": 19, "17315": 19, "13034": 19, "09905": 19, "07610": 19, "05909": 19, "04646": 19, "03704": 19, "02994": 19, "02455": 19, "02057": 19, "01770": 19, "01568": 19, "01428": 19, "01338": 19, "01290": 19, "01291": 19, "01293": 19, "01296": 19, "01299": 19, "06": 19, "unspport": 19, "0x7fc55d423b80": 19, "got": [19, 20, 23, 24], "922": 19, "_encod": [19, 20], "975": [19, 20], "futurewarn": [19, 20], "spars": [19, 20], "renam": [19, 20], "sparse_output": [19, 20], "0539513419692715": 19, "04583534381041924": 19, "037197059815904744": 19, "043595758344357215": 19, "05357823334634304": 19, "03609232449283203": 19, "0392173562819759": 19, "03604853533518811": 19, "03738292749039829": 19, "matplotlib": [19, 21, 22, 23], "pyplot": [19, 21, 22, 23], "plt": [19, 21, 22, 23], "mc": 19, "mixer_nam": 19, "__class__": 19, "__name__": 19, "plot": [19, 22, 23], "fig": [19, 22], "ax": [19, 21, 22], "subplot": [19, 22], "im": 19, "imshow": 19, "cmap": [19, 22], "seismic": 19, "tick": 19, "set_xtick": [19, 21, 22], "arang": [19, 22], "set_ytick": 19, "set_xticklabel": [19, 21, 22], "set_yticklabel": 19, "rang": [19, 22, 23], "center": [19, 20], "va": 19, "color": [19, 21, 22, 23], "nice": [19, 24], "human": [19, 22], "countri": [19, 22], "cours": 19, "acc_stat": 19, "feature_import": 19, "though": [20, 22], "random_forest_mix": 20, "randomforestmix": 20, "clf": 20, "someon": 20, "anywai": 20, "messag": 20, "intuit": 20, "max_depth": 20, "hyper": [20, 21], "Then": 20, "friendli": 20, "foramat": 20, "yh": 20, "meant": 20, "decoded_predict": 20, "behaviour": 20, "ydf": 20, "unsuit": 20, "onlin": 20, "diagnos": 20, "heart": 20, "diseas": 20, "blob": 20, "heart_diseas": 20, "bother": 20, "put": 20, "2442": 20, "ag": [20, 24], "sex": 20, "cp": 20, "trestbp": 20, "chol": 20, "fb": 20, "restecg": 20, "thalach": 20, "exang": 20, "oldpeak": 20, "slope": 20, "ca": 20, "thal": 20, "42768": [20, 21], "09678387641906738": 20, "balanced_accuracy_scor": [20, 21], "standalon": 20, "04": [20, 23, 24], "798": 20, "_classif": 20, "2399": 20, "y_pred": 20, "y_true": 20, "my_custom_heart_disease_predictor": 20, "function_bas": 20, "2455": 20, "runtimewarn": 20, "encount": 20, "_none_fn": 20, "ufunc": 20, "modif": [20, 22, 23, 24], "original_index": [20, 23, 24], "073676": 20, "250612": 20, "462595": 20, "hidden": 21, "divers": 21, "credit": 21, "card": 21, "fraud": 21, "difficult": 21, "catch": 21, "thankfulli": 21, "rare": 21, "imbal": 21, "fact": [21, 22], "smote": 21, "imblearn": 21, "ver": 21, "2627": 21, "creditcard": 21, "v1": 21, "v2": 21, "v3": 21, "v4": 21, "v5": 21, "v6": 21, "v7": 21, "v8": 21, "v9": 21, "v21": 21, "v22": 21, "v23": 21, "v24": 21, "v25": 21, "v26": 21, "v27": 21, "v28": 21, "359807": 21, "072781": 21, "536347": 21, "378155": 21, "338321": 21, "462388": 21, "239599": 21, "098698": 21, "363787": 21, "018307": 21, "277838": 21, "110474": 21, "066928": 21, "128539": 21, "189115": 21, "133558": 21, "021053": 21, "191857": 21, "266151": 21, "166480": 21, "448154": 21, "060018": 21, "082361": 21, "078803": 21, "085102": 21, "255425": 21, "225775": 21, "638672": 21, "101288": 21, "339846": 21, "167170": 21, "125895": 21, "008983": 21, "014724": 21, "358354": 21, "340163": 21, "773209": 21, "379780": 21, "503198": 21, "800499": 21, "791461": 21, "247676": 21, "514654": 21, "247998": 21, "771679": 21, "909412": 21, "689281": 21, "327642": 21, "139097": 21, "055353": 21, "059752": 21, "966272": 21, "185226": 21, "792993": 21, "863291": 21, "010309": 21, "247203": 21, "237609": 21, "377436": 21, "387024": 21, "108300": 21, "005274": 21, "190321": 21, "175575": 21, "647376": 21, "221929": 21, "062723": 21, "061458": 21, "158233": 21, "877737": 21, "548718": 21, "403034": 21, "407193": 21, "095921": 21, "592941": 21, "270533": 21, "817739": 21, "009431": 21, "798278": 21, "137458": 21, "141267": 21, "206010": 21, "502292": 21, "219422": 21, "215153": 21, "confidenti": 21, "reason": 21, "mention": 21, "v_i": 21, "principl": 21, "pc": 21, "pca": 21, "compani": 21, "remain": 21, "transact": 21, "monei": 21, "heavi": 21, "figur": [21, 23], "add_subplot": 21, "hist": [21, 22], "bin": 21, "set_ylabel": 21, "count": [21, 23], "set_xlabel": 21, "set_titl": [21, 22], "18424": 21, "284807": 21, "v10": 21, "v11": 21, "v12": 21, "v13": 21, "v14": 21, "v15": 21, "v16": 21, "v17": 21, "v18": 21, "v19": 21, "v20": 21, "won": 21, "processor": 21, "approxim": 21, "mimic": 21, "undersampl": 21, "mycustomsplitt": 21, "itertool": 21, "product": 21, "over_sampl": 21, "model_select": 21, "train_test_split": 21, "mysplitt": 21, "reproduc": 21, "frac": [21, 24], "reset_index": 21, "x2": 21, "x_test": 21, "y2": 21, "y_test": 21, "train_siz": 21, "x_train": 21, "x_dev": 21, "y_train": 21, "y_dev": 21, "test_siz": 21, "underbalanc": 21, "smote_model": 21, "xtrain_mod": 21, "ytrain_mod": 21, "fit_resampl": 21, "ravel": 21, "custom_splitter_pipelin": 21, "36851072311401": 21, "rcparam": 21, "font": 21, "figsiz": [21, 22, 23], "ndistribut": 21, "set_ylim": 21, "1e6": 21, "tight_layout": 21, "greatli": 21, "minor": 21, "custom_splitt": 21, "ran": 22, "statisticalanalyz": 22, "anoth": 22, "9944201": 22, "1284000": 22, "1200": 22, "5450661": 22, "43094": 22, "31100": 22, "26783383": 22, "437072": 22, "1500": 22, "9439": 22, "3400": 22, "3431932": 22, "176220": 22, "12800": 22, "medium": 22, "low": 22, "statu": 22, "nation": 22, "2733": 22, "dataclass": 22, "getattr": 22, "bunch": 22, "purpos": 22, "rememb": 22, "infer_typ": 22, "additional_info": 22, "stan": 22, "avg_words_per_sent": 22, "df_target_stddev": 22, "distinct": 22, "nr_column": 22, "nr_row": 22, "target_class_distribut": 22, "train_observed_class": 22, "ts_stat": 22, "aren": 22, "descript": 22, "proport": 22, "seemingli": 22, "colum": 22, "discret": 22, "1592": 22, "2684": 22, "3776": 22, "4868": 22, "5960": 22, "7052": 22, "8144": 22, "9236": 22, "10328": 22, "11420": 22, "12512": 22, "13604": 22, "14696": 22, "15788": 22, "16880": 22, "17972": 22, "19064": 22, "20156": 22, "21248": 22, "22340": 22, "23432": 22, "24524": 22, "25616": 22, "26708": 22, "27800": 22, "28892": 22, "29984": 22, "31076": 22, "32168": 22, "33260": 22, "34352": 22, "35444": 22, "36536": 22, "37628": 22, "38720": 22, "39812": 22, "40904": 22, "41996": 22, "43088": 22, "44180": 22, "45272": 22, "46364": 22, "47456": 22, "48548": 22, "49640": 22, "50732": 22, "51824": 22, "52916": 22, "54008": 22, "degre": 22, "colnam": 22, "entropi": 22, "bias": 22, "biased_bucket": 22, "131403695": 22, "78845027": 22, "52565693": 22, "26286360": 22, "7026": 22, "650": 22, "6183": 22, "976": 22, "753": 22, "767": 22, "cm": 22, "tab10": 22, "barplot": 22, "bar": 22, "rotat": 22, "quick": 22, "outlier": 22, "valuabl": [22, 23], "whatev": 22, "ubiquit": 23, "retail": 23, "industri": 23, "manufactur": 23, "univari": 23, "multivari": 23, "pain": 23, "commonli": 23, "sunspot": 23, "begin": 23, "monthly_sunspot": 23, "1749": 23, "2815": 23, "1983": 23, "08": [23, 24], "2816": 23, "2817": 23, "2818": 23, "2819": 23, "2820": 23, "character": 23, "notion": 23, "nltk_data": 23, "punkt": 23, "runner": 23, "unzip": 23, "2407": 23, "semest": 23, "datset": 23, "past": 23, "cutoff": 23, "2538": 23, "uncom": 23, "2467": 23, "infer_datetime_format": 23, "strict": 23, "pydata": 23, "pdep": 23, "0004": 23, "pars": 23, "safe": 23, "to_datetim": 23, "reshap": 23, "minut": 23, "051180988550186": 23, "014871507883072": 23, "969509452581406": 23, "879051893949509": 23, "7889504134655": 23, "611965090036392": 23, "195776104927063": 23, "255893111228943": 23, "5818348526954651": 23, "4797109067440033": 23, "48386093974113464": 23, "49511992931365967": 23, "39475566148757935": 23, "39592696726322174": 23, "3622782230377197": 23, "3817047029733658": 23, "5138542950153351": 23, "6360724717378616": 23, "2986880974336104": 23, "303189678625627": 23, "lgbm": 23, "rmse": 23, "76798": 23, "57023": 23, "7127": 23, "971762418747": 23, "72661": 23, "49596": 23, "38592": 23, "09356": 23, "88080": 23, "21734": 23, "95640": 23, "80745": 23, "76428": 23, "89176": 23, "87901": 23, "87505": 23, "95930": 23, "972051620483": 23, "27936": 23, "47815": 23, "37610": 23, "25243": 23, "03199": 23, "67706": 23, "57516": 23, "51227": 23, "51216": 23, "55192": 23, "56609": 23, "71702": 23, "75939": 23, "14000": 23, "970281362534": 23, "50446": 23, "73040": 23, "16599": 23, "28726": 23, "46406": 23, "07306": 23, "00714": 23, "13990": 23, "12589": 23, "34977": 23, "43217": 23, "19079": 23, "973690986633": 23, "13289": 23, "40621": 23, "82532": 23, "03399": 23, "07010": 23, "74813": 23, "81255": 23, "69303": 23, "71044": 23, "79641": 23, "78759": 23, "83998": 23, "77980": 23, "24747": 23, "9716284275055": 23, "37446": 23, "88767": 23, "63817": 23, "84209": 23, "35045": 23, "11300": 23, "16132": 23, "21348": 23, "10747": 23, "20352": 23, "25761": 23, "25308": 23, "31415": 23, "31000": 23, "48913": 23, "9750237464905": 23, "69001": 23, "87323": 23, "32567": 23, "09943": 23, "12203": 23, "71523": 23, "70934": 23, "74380": 23, "61157": 23, "73507": 23, "84587": 23, "78099": 23, "68890": 23, "875": 23, "869": 23, "2962628627816836": 23, "2954987585544586": 23, "tmp": 23, "63fc012a4095a186b3ebe7d069559154b5023889346a90c51698164463907065": 23, "581": 23, "settingwithcopywarn": 23, "copi": 23, "loc": 23, "row_index": 23, "col_index": 23, "doc": 23, "user_guid": 23, "view": 23, "versu": 23, "order_month": 23, "upper": [23, 24], "prediction_sum": 23, "lower_sum": 23, "upper_sum": 23, "confidence_mean": 23, "51358913359383": 23, "789764807382824": 23, "030": 23, "273628800": 23, "270950400": 23, "268272000": 23, "9991": [23, 24], "141403339989672": 23, "97334488647324": 23, "88577492719799": 23, "6061847282924": 23, "2895": 23, "494112": 23, "075865": 23, "801067": 23, "fall": 23, "region": 23, "appreci": 23, "purpl": 23, "grei": 23, "xlabel": 23, "ylabel": 23, "titl": 23, "legend": 23, "gone": [23, 24], "preexist": 24, "convieni": 24, "concret": 24, "2706": 24, "concrete_strength": 24, "train_df": 24, "update_df": 24, "721": 24, "rough": 24, "impact": 24, "jai": 24, "979": 24, "1030": 24, "cement": 24, "slag": 24, "flyash": 24, "water": 24, "superplastic": 24, "coarseaggreg": 24, "fineaggreg": 24, "99637413024902": 24, "826460480690002": 24, "12899625301361": 24, "062753677368164": 24, "490498542785645": 24, "65720558166504": 24, "607186794281": 24, "11838733404874802": 24, "4641949534416199": 24, "3976145088672638": 24, "3706841766834259": 24, "2367912083864212": 24, "22560922801494598": 24, "12089194357395172": 24, "1678172399600347": 24, "909611": 24, "398061": 24, "146818": 24, "635269": 24, "482300": 24, "970750": 24, "593750": 24, "082201": 24, "724546": 24, "212997": 24, "553097": 24, "064646": 24, "041547": 24, "580425": 24, "091975": 24, "068876": 24, "114187": 24, "602638": 24, "675985": 24, "164436": 24, "231647": 24, "720098": 24, "partit": 24, "dummi": 24, "10915954907735188": 24, "new_predict": 24, "645531": 24, "00000": 24, "133981": 24, "964922": 24, "453373": 24, "151918": 24, "640369": 24, "815779": 24, "304229": 24, "987530": 24, "475980": 24, "630001": 24, "14155": 24, "118452": 24, "175217": 24, "663667": 24, "047451": 24, "535902": 24, "659145": 24, "147596": 24, "264580": 24, "753030": 24, "old_acc": 24, "new_acc": 24, "nnew": 24, "acquir": 24}, "objects": {"": [[0, 0, 0, "-", "analysis"], [8, 0, 0, "-", "data"], [9, 0, 0, "-", "encoder"], [10, 0, 0, "-", "ensemble"], [11, 0, 0, "-", "helpers"], [14, 0, 0, "-", "mixer"]], "analysis": [[0, 1, 1, "", "AccStats"], [0, 1, 1, "", "BaseAnalysisBlock"], [0, 1, 1, "", "ConfStats"], [0, 1, 1, "", "ICP"], [0, 1, 1, "", "PermutationFeatureImportance"], [0, 1, 1, "", "TempScaler"], [0, 3, 1, "", "explain"], [0, 3, 1, "", "model_analyzer"]], "analysis.AccStats": [[0, 2, 1, "", "analyze"]], "analysis.BaseAnalysisBlock": [[0, 2, 1, "", "analyze"], [0, 2, 1, "", "explain"]], "analysis.ConfStats": [[0, 2, 1, "", "analyze"]], "analysis.ICP": [[0, 2, 1, "", "analyze"], [0, 2, 1, "", "explain"]], "analysis.PermutationFeatureImportance": [[0, 2, 1, "", "analyze"]], "analysis.TempScaler": [[0, 2, 1, "", "analyze"], [0, 2, 1, "", "explain"]], "api": [[4, 0, 0, "-", "high_level"], [5, 0, 0, "-", "json_ai"], [6, 0, 0, "-", "predictor"], [7, 0, 0, "-", "types"]], "api.high_level": [[4, 3, 1, "", "code_from_json_ai"], [4, 3, 1, "", "code_from_problem"], [4, 3, 1, "", "json_ai_from_problem"], [4, 3, 1, "", "predictor_from_code"], [4, 3, 1, "", "predictor_from_json_ai"], [4, 3, 1, "", "predictor_from_problem"], [4, 3, 1, "", "predictor_from_state"]], "api.json_ai": [[5, 3, 1, "", "add_implicit_values"], [5, 3, 1, "", "generate_json_ai"], [5, 3, 1, "", "lookup_encoder"], [5, 3, 1, "", "validate_json_ai"]], "api.predictor": [[6, 1, 1, "", "PredictorInterface"]], "api.predictor.PredictorInterface": [[6, 2, 1, "", "adjust"], [6, 2, 1, "", "analyze_data"], [6, 2, 1, "", "analyze_ensemble"], [6, 2, 1, "", "export"], [6, 2, 1, "", "featurize"], [6, 2, 1, "", "fit"], [6, 2, 1, "", "learn"], [6, 2, 1, "", "predict"], [6, 2, 1, "", "prepare"], [6, 2, 1, "", "preprocess"], [6, 2, 1, "", "save"], [6, 2, 1, "", "split"]], "api.types": [[7, 1, 1, "", "JsonAI"], [7, 1, 1, "", "ModelAnalysis"], [7, 1, 1, "", "Module"], [7, 1, 1, "", "PredictionArguments"], [7, 1, 1, "", "ProblemDefinition"], [7, 1, 1, "", "SubmodelData"], [7, 1, 1, "", "TimeseriesSettings"]], "api.types.JsonAI": [[7, 2, 1, "", "from_dict"], [7, 2, 1, "", "from_json"], [7, 2, 1, "", "to_dict"], [7, 2, 1, "", "to_json"]], "api.types.PredictionArguments": [[7, 2, 1, "", "from_dict"], [7, 2, 1, "", "to_dict"]], "api.types.ProblemDefinition": [[7, 2, 1, "", "from_dict"], [7, 2, 1, "", "from_json"], [7, 2, 1, "", "to_dict"], [7, 2, 1, "", "to_json"]], "api.types.TimeseriesSettings": [[7, 2, 1, "", "from_dict"], [7, 2, 1, "", "from_json"], [7, 2, 1, "", "to_dict"], [7, 2, 1, "", "to_json"]], "data": [[8, 1, 1, "", "ConcatedEncodedDs"], [8, 1, 1, "", "EncodedDs"], [8, 3, 1, "", "timeseries_analyzer"], [8, 3, 1, "", "transform_timeseries"]], "data.ConcatedEncodedDs": [[8, 2, 1, "", "clear_cache"], [8, 2, 1, "", "get_column_original_data"], [8, 2, 1, "", "get_encoded_column_data"]], "data.EncodedDs": [[8, 2, 1, "", "build_cache"], [8, 2, 1, "", "clear_cache"], [8, 2, 1, "", "get_column_original_data"], [8, 2, 1, "", "get_encoded_column_data"], [8, 2, 1, "", "get_encoded_data"]], "encoder": [[9, 1, 1, "", "ArrayEncoder"], [9, 1, 1, "", "BaseEncoder"], [9, 1, 1, "", "BinaryEncoder"], [9, 1, 1, "", "CatArrayEncoder"], [9, 1, 1, "", "CategoricalAutoEncoder"], [9, 1, 1, "", "DatetimeEncoder"], [9, 1, 1, "", "DatetimeNormalizerEncoder"], [9, 1, 1, "", "Img2VecEncoder"], [9, 1, 1, "", "MultiHotEncoder"], [9, 1, 1, "", "NumArrayEncoder"], [9, 1, 1, "", "NumericEncoder"], [9, 1, 1, "", "OneHotEncoder"], [9, 1, 1, "", "PretrainedLangEncoder"], [9, 1, 1, "", "ShortTextEncoder"], [9, 1, 1, "", "SimpleLabelEncoder"], [9, 4, 1, "", "TextRnnEncoder"], [9, 1, 1, "", "TimeSeriesEncoder"], [9, 1, 1, "", "TsArrayNumericEncoder"], [9, 1, 1, "", "TsCatArrayEncoder"], [9, 1, 1, "", "TsNumericEncoder"], [9, 1, 1, "", "VocabularyEncoder"]], "encoder.ArrayEncoder": [[9, 2, 1, "", "decode"], [9, 2, 1, "", "encode"], [9, 2, 1, "", "prepare"]], "encoder.BaseEncoder": [[9, 2, 1, "", "decode"], [9, 2, 1, "", "encode"], [9, 2, 1, "", "prepare"]], "encoder.BinaryEncoder": [[9, 2, 1, "", "decode"], [9, 2, 1, "", "decode_probabilities"], [9, 2, 1, "", "encode"], [9, 2, 1, "", "prepare"]], "encoder.CatArrayEncoder": [[9, 2, 1, "", "decode"], [9, 2, 1, "", "prepare"]], "encoder.CategoricalAutoEncoder": [[9, 2, 1, "", "decode"], [9, 2, 1, "", "encode"], [9, 2, 1, "", "prepare"]], "encoder.DatetimeEncoder": [[9, 2, 1, "", "decode"], [9, 2, 1, "", "encode"], [9, 2, 1, "", "prepare"]], "encoder.DatetimeNormalizerEncoder": [[9, 2, 1, "", "decode"], [9, 2, 1, "", "encode"], [9, 2, 1, "", "encode_one"], [9, 2, 1, "", "prepare"]], "encoder.Img2VecEncoder": [[9, 2, 1, "", "decode"], [9, 2, 1, "", "encode"], [9, 2, 1, "", "prepare"], [9, 2, 1, "", "to"]], "encoder.MultiHotEncoder": [[9, 2, 1, "", "decode"], [9, 2, 1, "", "encode"], [9, 2, 1, "", "prepare"]], "encoder.NumericEncoder": [[9, 2, 1, "", "decode"], [9, 2, 1, "", "encode"], [9, 2, 1, "", "prepare"]], "encoder.OneHotEncoder": [[9, 2, 1, "", "decode"], [9, 2, 1, "", "decode_probabilities"], [9, 2, 1, "", "encode"], [9, 2, 1, "", "prepare"]], "encoder.PretrainedLangEncoder": [[9, 2, 1, "", "decode"], [9, 2, 1, "", "encode"], [9, 4, 1, "", "is_trainable_encoder"], [9, 2, 1, "", "prepare"], [9, 2, 1, "", "to"]], "encoder.ShortTextEncoder": [[9, 2, 1, "", "decode"], [9, 2, 1, "", "encode"], [9, 2, 1, "", "prepare"]], "encoder.SimpleLabelEncoder": [[9, 2, 1, "", "decode"], [9, 2, 1, "", "encode"], [9, 2, 1, "", "prepare"]], "encoder.TimeSeriesEncoder": [[9, 2, 1, "", "decode"], [9, 2, 1, "", "encode"]], "encoder.TsArrayNumericEncoder": [[9, 2, 1, "", "decode"], [9, 2, 1, "", "decode_one"], [9, 2, 1, "", "encode"], [9, 2, 1, "", "prepare"]], "encoder.TsCatArrayEncoder": [[9, 2, 1, "", "decode"], [9, 2, 1, "", "decode_one"], [9, 2, 1, "", "encode"], [9, 2, 1, "", "encode_one"], [9, 2, 1, "", "prepare"]], "encoder.TsNumericEncoder": [[9, 2, 1, "", "decode"], [9, 2, 1, "", "encode"]], "encoder.VocabularyEncoder": [[9, 2, 1, "", "decode"], [9, 2, 1, "", "encode"], [9, 2, 1, "", "prepare"]], "ensemble": [[10, 1, 1, "", "BaseEnsemble"], [10, 1, 1, "", "BestOf"], [10, 1, 1, "", "Embedder"], [10, 1, 1, "", "IdentityEnsemble"], [10, 1, 1, "", "MeanEnsemble"], [10, 1, 1, "", "ModeEnsemble"], [10, 1, 1, "", "StackedEnsemble"], [10, 1, 1, "", "TsStackedEnsemble"], [10, 1, 1, "", "WeightedMeanEnsemble"]], "helpers": [[11, 1, 1, "", "LightwoodAutocast"], [11, 3, 1, "", "add_tn_num_conf_bounds"], [11, 3, 1, "", "concat_vectors_and_pad"], [11, 3, 1, "", "get_devices"], [11, 3, 1, "", "is_cuda_compatible"], [11, 3, 1, "", "is_none"]], "mixer": [[14, 1, 1, "", "ARIMAMixer"], [14, 1, 1, "", "BaseMixer"], [14, 1, 1, "", "ETSMixer"], [14, 1, 1, "", "Neural"], [14, 1, 1, "", "NeuralTs"], [14, 1, 1, "", "ProphetMixer"], [14, 1, 1, "", "RandomForest"], [14, 1, 1, "", "Regression"], [14, 1, 1, "", "SkTime"], [14, 1, 1, "", "TabTransformerMixer"], [14, 1, 1, "", "Unit"], [14, 1, 1, "", "XGBoostArrayMixer"], [14, 1, 1, "", "XGBoostMixer"]], "mixer.BaseMixer": [[14, 2, 1, "", "fit"], [14, 2, 1, "", "partial_fit"]], "mixer.Neural": [[14, 2, 1, "", "fit"], [14, 2, 1, "", "partial_fit"]], "mixer.NeuralTs": [[14, 2, 1, "", "fit"]], "mixer.RandomForest": [[14, 2, 1, "", "fit"], [14, 2, 1, "", "partial_fit"]], "mixer.Regression": [[14, 2, 1, "", "fit"], [14, 2, 1, "", "partial_fit"]], "mixer.SkTime": [[14, 2, 1, "", "fit"], [14, 2, 1, "", "partial_fit"]], "mixer.TabTransformerMixer": [[14, 2, 1, "", "fit"]], "mixer.Unit": [[14, 2, 1, "", "fit"], [14, 2, 1, "", "partial_fit"]], "mixer.XGBoostArrayMixer": [[14, 2, 1, "", "fit"], [14, 2, 1, "", "partial_fit"]], "mixer.XGBoostMixer": [[14, 2, 1, "", "fit"], [14, 2, 1, "", "partial_fit"], [14, 4, 1, "", "supports_proba"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function", "4": "py:attribute"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"], "4": ["py", "attribute", "Python attribute"]}, "titleterms": {"analysi": [0, 19, 22], "api": [1, 7], "tabl": 1, "content": 1, "data": [2, 3, 8, 17, 18, 21, 23], "type": [2, 7], "dtype": 2, "encod": [3, 9, 18], "your": [3, 12, 17, 18, 21], "json": [4, 5, 17, 18, 21], "ai": [4, 5, 17, 18, 21], "config": [4, 5], "predictor": [6, 18, 23, 24], "interfac": [6, 20], "lightwood": [7, 12, 13, 17, 19, 20, 22], "ensembl": 10, "helper": 11, "quick": 12, "guid": 12, "instal": 12, "set": 12, "up": 12, "dev": 12, "environ": 12, "vscode": 12, "exampl": 12, "us": [12, 17, 20], "case": 12, "byom": 12, "bring": 12, "own": [12, 17, 21], "model": [12, 13, 24], "contribut": 12, "how": [12, 16], "can": 12, "you": 12, "help": 12, "u": 12, "code": [12, 17, 18, 21], "featur": [12, 13], "bug": 12, "report": 12, "review": 12, "process": [12, 13, 17], "commun": 12, "contributor": 12, "conduct": 12, "current": 12, "licens": 12, "other": 12, "link": 12, "philosophi": 13, "introduct": [13, 19, 20, 22, 23, 24], "pipelin": [13, 17, 21], "i": 13, "pre": [13, 17], "clean": 13, "ii": 13, "engin": 13, "iii": 13, "build": [13, 17, 21], "train": [13, 21, 23, 24], "strength": 13, "drawback": 13, "mixer": [14, 20], "tutori": [15, 16, 19, 20, 22, 23], "make": 16, "notebook": 16, "method": 17, "date": [17, 21], "2021": [17, 21], "10": [17, 21], "07": [17, 21], "1": [17, 18, 19, 20, 21, 22], "load": [17, 18, 21, 22, 23], "2": [17, 18, 19, 20, 21, 22], "creat": [17, 18, 21], "default": [17, 21], "object": [17, 19, 20, 21, 22, 23], "3": [17, 18, 19, 20, 21, 22], "cleaner": 17, "modul": [17, 21], "place": [17, 21], "custom": [17, 18, 19, 20, 21], "lightwood_modul": [17, 21], "etc": 17, "4": [17, 18, 19, 21], "introduc": [17, 21], "5": [17, 18, 21], "gener": [17, 18, 21, 23], "python": [17, 21], "repres": [17, 21], "ml": [17, 21], "6": [17, 21], "call": [17, 21], "run": [17, 19, 21, 22], "see": [17, 21], "preprocess": [17, 21], "output": [17, 21], "rule": 18, "base": 18, "syntax": 18, "labelencod": 18, "edit": 18, "from": 18, "implement": [19, 20], "block": 19, "step": [19, 20, 22], "figur": 19, "out": 19, "what": 19, "we": 19, "need": 19, "expos": 19, "final": [19, 22], "test": [19, 21], "The": 20, "write": 20, "our": 20, "split": 21, "splitter": 21, "": 22, "statist": 22, "dataset": 22, "defin": [22, 23], "predict": [22, 23], "task": [22, 23], "peek": 22, "insid": 22, "amount": 22, "miss": 22, "inform": 22, "bucket": 22, "per": 22, "column": 22, "bia": 22, "histogram": 22, "thought": 22, "time": 23, "seri": 23, "forecast": 23, "visual": 23, "conclus": [23, 24], "initi": 24, "updat": 24, "basemix": 24, "partial_fit": 24, "predictorinterfac": 24, "adjust": 24}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "nbsphinx": 4, "sphinx": 57}, "alltitles": {"Analysis": [[0, "analysis"]], "API": [[1, "api"]], "Table of Contents:": [[1, null]], "Data Types (dtypes)": [[2, "data-types-dtypes"]], "Encode your data": [[3, "encode-your-data"]], "JSON-AI Config": [[4, "module-api.high_level"], [5, "module-api.json_ai"]], "Predictor Interface": [[6, "predictor-interface"]], "Lightwood API Types": [[7, "lightwood-api-types"]], "Data": [[8, "data"]], "Encoders": [[9, "encoders"]], "Ensemble": [[10, "ensemble"]], "Helpers": [[11, "helpers"]], "Lightwood": [[12, "lightwood"]], "Quick Guide": [[12, "quick-guide"]], "Installation": [[12, "installation"]], "Setting up a dev environment": [[12, "setting-up-a-dev-environment"]], "Setting up a VSCode environment": [[12, "setting-up-a-vscode-environment"]], "Example Use Cases": [[12, "example-use-cases"]], "BYOM: Bring your own models": [[12, "byom-bring-your-own-models"]], "Contribute to Lightwood": [[12, "contribute-to-lightwood"]], "How can you help us?": [[12, "how-can-you-help-us"]], "Code contributions": [[12, "code-contributions"]], "Feature and Bug reports": [[12, "feature-and-bug-reports"]], "Code review process": [[12, "code-review-process"]], "Community": [[12, "community"]], "Contributor Code of Conduct": [[12, "contributor-code-of-conduct"]], "Current contributors": [[12, "current-contributors"]], "License": [[12, "license"]], "Other Links": [[12, "other-links"]], "Lightwood Philosophy": [[13, "lightwood-philosophy"]], "Introduction": [[13, "introduction"], [19, "Introduction"], [20, "Introduction"], [23, "Introduction"], [24, "Introduction"]], "Pipeline": [[13, "pipeline"]], "i) Pre-processing and cleaning": [[13, "i-pre-processing-and-cleaning"]], "ii) Feature Engineering": [[13, "ii-feature-engineering"]], "iii) Model Building and Training": [[13, "iii-model-building-and-training"]], "Strengths and drawbacks": [[13, "strengths-and-drawbacks"]], "Mixers": [[14, "mixers"]], "Tutorials": [[15, "tutorials"]], "How to make a tutorial notebook?": [[16, "how-to-make-a-tutorial-notebook"]], "Using your own pre-processing methods in Lightwood": [[17, "Using-your-own-pre-processing-methods-in-Lightwood"]], "Date: 2021.10.07": [[17, "Date:-2021.10.07"], [21, "Date:-2021.10.07"]], "1) Load your data": [[17, "1)-Load-your-data"], [18, "1)-Load-your-data"], [21, "1)-Load-your-data"]], "2) Create a JSON-AI default object": [[17, "2)-Create-a-JSON-AI-default-object"], [21, "2)-Create-a-JSON-AI-default-object"]], "3) Build your own cleaner module": [[17, "3)-Build-your-own-cleaner-module"]], "Place your custom module in ~/lightwood_modules or /etc/lightwood_modules": [[17, "Place-your-custom-module-in-~/lightwood_modules-or-/etc/lightwood_modules"]], "4) Introduce your custom cleaner in JSON-AI": [[17, "4)-Introduce-your-custom-cleaner-in-JSON-AI"]], "5) Generate Python code representing your ML pipeline": [[17, "5)-Generate-Python-code-representing-your-ML-pipeline"], [21, "5)-Generate-Python-code-representing-your-ML-pipeline"]], "6) Call python to run your code and see your preprocessed outputs": [[17, "6)-Call-python-to-run-your-code-and-see-your-preprocessed-outputs"], [21, "6)-Call-python-to-run-your-code-and-see-your-preprocessed-outputs"]], "Custom Encoder: Rule-Based": [[18, "Custom-Encoder:-Rule-Based"]], "2) Generate JSON-AI Syntax": [[18, "2)-Generate-JSON-AI-Syntax"]], "3) Create your custom encoder (LabelEncoder).": [[18, "3)-Create-your-custom-encoder-(LabelEncoder)."]], "LabelEncoder": [[18, "LabelEncoder"]], "4) Edit JSON-AI": [[18, "4)-Edit-JSON-AI"]], "5) Generate code and your predictor from JSON-AI": [[18, "5)-Generate-code-and-your-predictor-from-JSON-AI"]], "Tutorial - Implementing a custom analysis block in Lightwood": [[19, "Tutorial---Implementing-a-custom-analysis-block-in-Lightwood"]], "Objective": [[19, "Objective"], [20, "Objective"], [22, "Objective"]], "Step 1: figuring out what we need": [[19, "Step-1:-figuring-out-what-we-need"]], "Step 2: Implementing the custom analysis block": [[19, "Step-2:-Implementing-the-custom-analysis-block"]], "Step 3: Exposing the block to Lightwood": [[19, "Step-3:-Exposing-the-block-to-Lightwood"]], "Step 4: Final test run": [[19, "Step-4:-Final-test-run"]], "Tutorial - Implementing a custom mixer in Lightwood": [[20, "Tutorial---Implementing-a-custom-mixer-in-Lightwood"]], "Step 1: The Mixer Interface": [[20, "Step-1:-The-Mixer-Interface"]], "Step 2: Writing our mixer": [[20, "Step-2:-Writing-our-mixer"]], "Step 3: Using our mixer": [[20, "Step-3:-Using-our-mixer"]], "Build your own training/testing split": [[21, "Build-your-own-training/testing-split"]], "3) Build your own splitter module": [[21, "3)-Build-your-own-splitter-module"]], "Place your custom module in ~/lightwood_modules": [[21, "Place-your-custom-module-in-~/lightwood_modules"]], "4) Introduce your custom splitter in JSON-AI": [[21, "4)-Introduce-your-custom-splitter-in-JSON-AI"]], "Tutorial - Introduction to Lightwood\u2019s statistical analysis": [[22, "Tutorial---Introduction-to-Lightwood's-statistical-analysis"]], "Step 1: load the dataset and define the predictive task": [[22, "Step-1:-load-the-dataset-and-define-the-predictive-task"]], "Step 2: Run the statistical analysis": [[22, "Step-2:-Run-the-statistical-analysis"]], "Step 3: Peeking inside": [[22, "Step-3:-Peeking-inside"]], "Amount of missing information": [[22, "Amount-of-missing-information"]], "Buckets per column": [[22, "Buckets-per-column"]], "Bias per column": [[22, "Bias-per-column"]], "Column histograms": [[22, "Column-histograms"]], "Final thoughts": [[22, "Final-thoughts"]], "Tutorial - Time series forecasting": [[23, "Tutorial---Time-series-forecasting"]], "Load data": [[23, "Load-data"]], "Define the predictive task": [[23, "Define-the-predictive-task"]], "Generate the predictor object": [[23, "Generate-the-predictor-object"]], "Train": [[23, "Train"]], "Predict": [[23, "Predict"]], "Visualizing a forecast": [[23, "Visualizing-a-forecast"]], "Conclusion": [[23, "Conclusion"], [24, "Conclusion"]], "Initial model training": [[24, "Initial-model-training"]], "Updating the predictor": [[24, "Updating-the-predictor"]], "BaseMixer.partial_fit()": [[24, "BaseMixer.partial_fit()"]], "PredictorInterface.adjust()": [[24, "PredictorInterface.adjust()"]]}, "indexentries": {"accstats (class in analysis)": [[0, "analysis.AccStats"]], "baseanalysisblock (class in analysis)": [[0, "analysis.BaseAnalysisBlock"]], "confstats (class in analysis)": [[0, "analysis.ConfStats"]], "icp (class in analysis)": [[0, "analysis.ICP"]], "permutationfeatureimportance (class in analysis)": [[0, "analysis.PermutationFeatureImportance"]], "tempscaler (class in analysis)": [[0, "analysis.TempScaler"]], "analysis": [[0, "module-analysis"]], "analyze() (analysis.accstats method)": [[0, "analysis.AccStats.analyze"]], "analyze() (analysis.baseanalysisblock method)": [[0, "analysis.BaseAnalysisBlock.analyze"]], "analyze() (analysis.confstats method)": [[0, "analysis.ConfStats.analyze"]], "analyze() (analysis.icp method)": [[0, "analysis.ICP.analyze"]], "analyze() (analysis.permutationfeatureimportance method)": [[0, "analysis.PermutationFeatureImportance.analyze"]], "analyze() (analysis.tempscaler method)": [[0, "analysis.TempScaler.analyze"]], "explain() (analysis.baseanalysisblock method)": [[0, "analysis.BaseAnalysisBlock.explain"]], "explain() (analysis.icp method)": [[0, "analysis.ICP.explain"]], "explain() (analysis.tempscaler method)": [[0, "analysis.TempScaler.explain"]], "explain() (in module analysis)": [[0, "analysis.explain"]], "model_analyzer() (in module analysis)": [[0, "analysis.model_analyzer"]], "module": [[0, "module-analysis"], [4, "module-api.high_level"], [5, "module-api.json_ai"], [6, "module-api.predictor"], [7, "module-api.types"], [8, "module-data"], [9, "module-encoder"], [10, "module-ensemble"], [11, "module-helpers"], [14, "module-mixer"]], "api.high_level": [[4, "module-api.high_level"]], "code_from_json_ai() (in module api.high_level)": [[4, "api.high_level.code_from_json_ai"]], "code_from_problem() (in module api.high_level)": [[4, "api.high_level.code_from_problem"]], "json_ai_from_problem() (in module api.high_level)": [[4, "api.high_level.json_ai_from_problem"]], "predictor_from_code() (in module api.high_level)": [[4, "api.high_level.predictor_from_code"]], "predictor_from_json_ai() (in module api.high_level)": [[4, "api.high_level.predictor_from_json_ai"]], "predictor_from_problem() (in module api.high_level)": [[4, "api.high_level.predictor_from_problem"]], "predictor_from_state() (in module api.high_level)": [[4, "api.high_level.predictor_from_state"]], "add_implicit_values() (in module api.json_ai)": [[5, "api.json_ai.add_implicit_values"]], "api.json_ai": [[5, "module-api.json_ai"]], "generate_json_ai() (in module api.json_ai)": [[5, "api.json_ai.generate_json_ai"]], "lookup_encoder() (in module api.json_ai)": [[5, "api.json_ai.lookup_encoder"]], "validate_json_ai() (in module api.json_ai)": [[5, "api.json_ai.validate_json_ai"]], "predictorinterface (class in api.predictor)": [[6, "api.predictor.PredictorInterface"]], "adjust() (api.predictor.predictorinterface method)": [[6, "api.predictor.PredictorInterface.adjust"]], "analyze_data() (api.predictor.predictorinterface method)": [[6, "api.predictor.PredictorInterface.analyze_data"]], "analyze_ensemble() (api.predictor.predictorinterface method)": [[6, "api.predictor.PredictorInterface.analyze_ensemble"]], "api.predictor": [[6, "module-api.predictor"]], "export() (api.predictor.predictorinterface method)": [[6, "api.predictor.PredictorInterface.export"]], "featurize() (api.predictor.predictorinterface method)": [[6, "api.predictor.PredictorInterface.featurize"]], "fit() (api.predictor.predictorinterface method)": [[6, "api.predictor.PredictorInterface.fit"]], "learn() (api.predictor.predictorinterface method)": [[6, "api.predictor.PredictorInterface.learn"]], "predict() (api.predictor.predictorinterface method)": [[6, "api.predictor.PredictorInterface.predict"]], "prepare() (api.predictor.predictorinterface method)": [[6, "api.predictor.PredictorInterface.prepare"]], "preprocess() (api.predictor.predictorinterface method)": [[6, "api.predictor.PredictorInterface.preprocess"]], "save() (api.predictor.predictorinterface method)": [[6, "api.predictor.PredictorInterface.save"]], "split() (api.predictor.predictorinterface method)": [[6, "api.predictor.PredictorInterface.split"]], "jsonai (class in api.types)": [[7, "api.types.JsonAI"]], "modelanalysis (class in api.types)": [[7, "api.types.ModelAnalysis"]], "module (class in api.types)": [[7, "api.types.Module"]], "predictionarguments (class in api.types)": [[7, "api.types.PredictionArguments"]], "problemdefinition (class in api.types)": [[7, "api.types.ProblemDefinition"]], "submodeldata (class in api.types)": [[7, "api.types.SubmodelData"]], "timeseriessettings (class in api.types)": [[7, "api.types.TimeseriesSettings"]], "api.types": [[7, "module-api.types"]], "from_dict() (api.types.jsonai static method)": [[7, "api.types.JsonAI.from_dict"]], "from_dict() (api.types.predictionarguments static method)": [[7, "api.types.PredictionArguments.from_dict"]], "from_dict() (api.types.problemdefinition static method)": [[7, "api.types.ProblemDefinition.from_dict"]], "from_dict() (api.types.timeseriessettings static method)": [[7, "api.types.TimeseriesSettings.from_dict"]], "from_json() (api.types.jsonai static method)": [[7, "api.types.JsonAI.from_json"]], "from_json() (api.types.problemdefinition static method)": [[7, "api.types.ProblemDefinition.from_json"]], "from_json() (api.types.timeseriessettings static method)": [[7, "api.types.TimeseriesSettings.from_json"]], "to_dict() (api.types.jsonai method)": [[7, "api.types.JsonAI.to_dict"]], "to_dict() (api.types.predictionarguments method)": [[7, "api.types.PredictionArguments.to_dict"]], "to_dict() (api.types.problemdefinition method)": [[7, "api.types.ProblemDefinition.to_dict"]], "to_dict() (api.types.timeseriessettings method)": [[7, "api.types.TimeseriesSettings.to_dict"]], "to_json() (api.types.jsonai method)": [[7, "api.types.JsonAI.to_json"]], "to_json() (api.types.problemdefinition method)": [[7, "api.types.ProblemDefinition.to_json"]], "to_json() (api.types.timeseriessettings method)": [[7, "api.types.TimeseriesSettings.to_json"]], "concatedencodedds (class in data)": [[8, "data.ConcatedEncodedDs"]], "encodedds (class in data)": [[8, "data.EncodedDs"]], "build_cache() (data.encodedds method)": [[8, "data.EncodedDs.build_cache"]], "clear_cache() (data.concatedencodedds method)": [[8, "data.ConcatedEncodedDs.clear_cache"]], "clear_cache() (data.encodedds method)": [[8, "data.EncodedDs.clear_cache"]], "data": [[8, "module-data"]], "get_column_original_data() (data.concatedencodedds method)": [[8, "data.ConcatedEncodedDs.get_column_original_data"]], "get_column_original_data() (data.encodedds method)": [[8, "data.EncodedDs.get_column_original_data"]], "get_encoded_column_data() (data.concatedencodedds method)": [[8, "data.ConcatedEncodedDs.get_encoded_column_data"]], "get_encoded_column_data() (data.encodedds method)": [[8, "data.EncodedDs.get_encoded_column_data"]], "get_encoded_data() (data.encodedds method)": [[8, "data.EncodedDs.get_encoded_data"]], "timeseries_analyzer() (in module data)": [[8, "data.timeseries_analyzer"]], "transform_timeseries() (in module data)": [[8, "data.transform_timeseries"]], "arrayencoder (class in encoder)": [[9, "encoder.ArrayEncoder"]], "baseencoder (class in encoder)": [[9, "encoder.BaseEncoder"]], "binaryencoder (class in encoder)": [[9, "encoder.BinaryEncoder"]], "catarrayencoder (class in encoder)": [[9, "encoder.CatArrayEncoder"]], "categoricalautoencoder (class in encoder)": [[9, "encoder.CategoricalAutoEncoder"]], "datetimeencoder (class in encoder)": [[9, "encoder.DatetimeEncoder"]], "datetimenormalizerencoder (class in encoder)": [[9, "encoder.DatetimeNormalizerEncoder"]], "img2vecencoder (class in encoder)": [[9, "encoder.Img2VecEncoder"]], "multihotencoder (class in encoder)": [[9, "encoder.MultiHotEncoder"]], "numarrayencoder (class in encoder)": [[9, "encoder.NumArrayEncoder"]], "numericencoder (class in encoder)": [[9, "encoder.NumericEncoder"]], "onehotencoder (class in encoder)": [[9, "encoder.OneHotEncoder"]], "pretrainedlangencoder (class in encoder)": [[9, "encoder.PretrainedLangEncoder"]], "shorttextencoder (class in encoder)": [[9, "encoder.ShortTextEncoder"]], "simplelabelencoder (class in encoder)": [[9, "encoder.SimpleLabelEncoder"]], "textrnnencoder (in module encoder)": [[9, "encoder.TextRnnEncoder"]], "timeseriesencoder (class in encoder)": [[9, "encoder.TimeSeriesEncoder"]], "tsarraynumericencoder (class in encoder)": [[9, "encoder.TsArrayNumericEncoder"]], "tscatarrayencoder (class in encoder)": [[9, "encoder.TsCatArrayEncoder"]], "tsnumericencoder (class in encoder)": [[9, "encoder.TsNumericEncoder"]], "vocabularyencoder (class in encoder)": [[9, "encoder.VocabularyEncoder"]], "decode() (encoder.arrayencoder method)": [[9, "encoder.ArrayEncoder.decode"]], "decode() (encoder.baseencoder method)": [[9, "encoder.BaseEncoder.decode"]], "decode() (encoder.binaryencoder method)": [[9, "encoder.BinaryEncoder.decode"]], "decode() (encoder.catarrayencoder method)": [[9, "encoder.CatArrayEncoder.decode"]], "decode() (encoder.categoricalautoencoder method)": [[9, "encoder.CategoricalAutoEncoder.decode"]], "decode() (encoder.datetimeencoder method)": [[9, "encoder.DatetimeEncoder.decode"]], "decode() (encoder.datetimenormalizerencoder method)": [[9, "encoder.DatetimeNormalizerEncoder.decode"]], "decode() (encoder.img2vecencoder method)": [[9, "encoder.Img2VecEncoder.decode"]], "decode() (encoder.multihotencoder method)": [[9, "encoder.MultiHotEncoder.decode"]], "decode() (encoder.numericencoder method)": [[9, "encoder.NumericEncoder.decode"]], "decode() (encoder.onehotencoder method)": [[9, "encoder.OneHotEncoder.decode"]], "decode() (encoder.pretrainedlangencoder method)": [[9, "encoder.PretrainedLangEncoder.decode"]], "decode() (encoder.shorttextencoder method)": [[9, "encoder.ShortTextEncoder.decode"]], "decode() (encoder.simplelabelencoder method)": [[9, "encoder.SimpleLabelEncoder.decode"]], "decode() (encoder.timeseriesencoder method)": [[9, "encoder.TimeSeriesEncoder.decode"]], "decode() (encoder.tsarraynumericencoder method)": [[9, "encoder.TsArrayNumericEncoder.decode"]], "decode() (encoder.tscatarrayencoder method)": [[9, "encoder.TsCatArrayEncoder.decode"]], "decode() (encoder.tsnumericencoder method)": [[9, "encoder.TsNumericEncoder.decode"]], "decode() (encoder.vocabularyencoder method)": [[9, "encoder.VocabularyEncoder.decode"]], "decode_one() (encoder.tsarraynumericencoder method)": [[9, "encoder.TsArrayNumericEncoder.decode_one"]], "decode_one() (encoder.tscatarrayencoder method)": [[9, "encoder.TsCatArrayEncoder.decode_one"]], "decode_probabilities() (encoder.binaryencoder method)": [[9, "encoder.BinaryEncoder.decode_probabilities"]], "decode_probabilities() (encoder.onehotencoder method)": [[9, "encoder.OneHotEncoder.decode_probabilities"]], "encode() (encoder.arrayencoder method)": [[9, "encoder.ArrayEncoder.encode"]], "encode() (encoder.baseencoder method)": [[9, "encoder.BaseEncoder.encode"]], "encode() (encoder.binaryencoder method)": [[9, "encoder.BinaryEncoder.encode"]], "encode() (encoder.categoricalautoencoder method)": [[9, "encoder.CategoricalAutoEncoder.encode"]], "encode() (encoder.datetimeencoder method)": [[9, "encoder.DatetimeEncoder.encode"]], "encode() (encoder.datetimenormalizerencoder method)": [[9, "encoder.DatetimeNormalizerEncoder.encode"]], "encode() (encoder.img2vecencoder method)": [[9, "encoder.Img2VecEncoder.encode"]], "encode() (encoder.multihotencoder method)": [[9, "encoder.MultiHotEncoder.encode"]], "encode() (encoder.numericencoder method)": [[9, "encoder.NumericEncoder.encode"]], "encode() (encoder.onehotencoder method)": [[9, "encoder.OneHotEncoder.encode"]], "encode() (encoder.pretrainedlangencoder method)": [[9, "encoder.PretrainedLangEncoder.encode"]], "encode() (encoder.shorttextencoder method)": [[9, "encoder.ShortTextEncoder.encode"]], "encode() (encoder.simplelabelencoder method)": [[9, "encoder.SimpleLabelEncoder.encode"]], "encode() (encoder.timeseriesencoder method)": [[9, "encoder.TimeSeriesEncoder.encode"]], "encode() (encoder.tsarraynumericencoder method)": [[9, "encoder.TsArrayNumericEncoder.encode"]], "encode() (encoder.tscatarrayencoder method)": [[9, "encoder.TsCatArrayEncoder.encode"]], "encode() (encoder.tsnumericencoder method)": [[9, "encoder.TsNumericEncoder.encode"]], "encode() (encoder.vocabularyencoder method)": [[9, "encoder.VocabularyEncoder.encode"]], "encode_one() (encoder.datetimenormalizerencoder method)": [[9, "encoder.DatetimeNormalizerEncoder.encode_one"]], "encode_one() (encoder.tscatarrayencoder method)": [[9, "encoder.TsCatArrayEncoder.encode_one"]], "encoder": [[9, "module-encoder"]], "is_trainable_encoder (encoder.pretrainedlangencoder attribute)": [[9, "encoder.PretrainedLangEncoder.is_trainable_encoder"]], "prepare() (encoder.arrayencoder method)": [[9, "encoder.ArrayEncoder.prepare"]], "prepare() (encoder.baseencoder method)": [[9, "encoder.BaseEncoder.prepare"]], "prepare() (encoder.binaryencoder method)": [[9, "encoder.BinaryEncoder.prepare"]], "prepare() (encoder.catarrayencoder method)": [[9, "encoder.CatArrayEncoder.prepare"]], "prepare() (encoder.categoricalautoencoder method)": [[9, "encoder.CategoricalAutoEncoder.prepare"]], "prepare() (encoder.datetimeencoder method)": [[9, "encoder.DatetimeEncoder.prepare"]], "prepare() (encoder.datetimenormalizerencoder method)": [[9, "encoder.DatetimeNormalizerEncoder.prepare"]], "prepare() (encoder.img2vecencoder method)": [[9, "encoder.Img2VecEncoder.prepare"]], "prepare() (encoder.multihotencoder method)": [[9, "encoder.MultiHotEncoder.prepare"]], "prepare() (encoder.numericencoder method)": [[9, "encoder.NumericEncoder.prepare"]], "prepare() (encoder.onehotencoder method)": [[9, "encoder.OneHotEncoder.prepare"]], "prepare() (encoder.pretrainedlangencoder method)": [[9, "encoder.PretrainedLangEncoder.prepare"]], "prepare() (encoder.shorttextencoder method)": [[9, "encoder.ShortTextEncoder.prepare"]], "prepare() (encoder.simplelabelencoder method)": [[9, "encoder.SimpleLabelEncoder.prepare"]], "prepare() (encoder.tsarraynumericencoder method)": [[9, "encoder.TsArrayNumericEncoder.prepare"]], "prepare() (encoder.tscatarrayencoder method)": [[9, "encoder.TsCatArrayEncoder.prepare"]], "prepare() (encoder.vocabularyencoder method)": [[9, "encoder.VocabularyEncoder.prepare"]], "to() (encoder.img2vecencoder method)": [[9, "encoder.Img2VecEncoder.to"]], "to() (encoder.pretrainedlangencoder method)": [[9, "encoder.PretrainedLangEncoder.to"]], "baseensemble (class in ensemble)": [[10, "ensemble.BaseEnsemble"]], "bestof (class in ensemble)": [[10, "ensemble.BestOf"]], "embedder (class in ensemble)": [[10, "ensemble.Embedder"]], "identityensemble (class in ensemble)": [[10, "ensemble.IdentityEnsemble"]], "meanensemble (class in ensemble)": [[10, "ensemble.MeanEnsemble"]], "modeensemble (class in ensemble)": [[10, "ensemble.ModeEnsemble"]], "stackedensemble (class in ensemble)": [[10, "ensemble.StackedEnsemble"]], "tsstackedensemble (class in ensemble)": [[10, "ensemble.TsStackedEnsemble"]], "weightedmeanensemble (class in ensemble)": [[10, "ensemble.WeightedMeanEnsemble"]], "ensemble": [[10, "module-ensemble"]], "lightwoodautocast (class in helpers)": [[11, "helpers.LightwoodAutocast"]], "add_tn_num_conf_bounds() (in module helpers)": [[11, "helpers.add_tn_num_conf_bounds"]], "concat_vectors_and_pad() (in module helpers)": [[11, "helpers.concat_vectors_and_pad"]], "get_devices() (in module helpers)": [[11, "helpers.get_devices"]], "helpers": [[11, "module-helpers"]], "is_cuda_compatible() (in module helpers)": [[11, "helpers.is_cuda_compatible"]], "is_none() (in module helpers)": [[11, "helpers.is_none"]], "arimamixer (class in mixer)": [[14, "mixer.ARIMAMixer"]], "basemixer (class in mixer)": [[14, "mixer.BaseMixer"]], "etsmixer (class in mixer)": [[14, "mixer.ETSMixer"]], "neural (class in mixer)": [[14, "mixer.Neural"]], "neuralts (class in mixer)": [[14, "mixer.NeuralTs"]], "prophetmixer (class in mixer)": [[14, "mixer.ProphetMixer"]], "randomforest (class in mixer)": [[14, "mixer.RandomForest"]], "regression (class in mixer)": [[14, "mixer.Regression"]], "sktime (class in mixer)": [[14, "mixer.SkTime"]], "tabtransformermixer (class in mixer)": [[14, "mixer.TabTransformerMixer"]], "unit (class in mixer)": [[14, "mixer.Unit"]], "xgboostarraymixer (class in mixer)": [[14, "mixer.XGBoostArrayMixer"]], "xgboostmixer (class in mixer)": [[14, "mixer.XGBoostMixer"]], "fit() (mixer.basemixer method)": [[14, "mixer.BaseMixer.fit"]], "fit() (mixer.neural method)": [[14, "mixer.Neural.fit"]], "fit() (mixer.neuralts method)": [[14, "mixer.NeuralTs.fit"]], "fit() (mixer.randomforest method)": [[14, "mixer.RandomForest.fit"]], "fit() (mixer.regression method)": [[14, "mixer.Regression.fit"]], "fit() (mixer.sktime method)": [[14, "mixer.SkTime.fit"]], "fit() (mixer.tabtransformermixer method)": [[14, "mixer.TabTransformerMixer.fit"]], "fit() (mixer.unit method)": [[14, "mixer.Unit.fit"]], "fit() (mixer.xgboostarraymixer method)": [[14, "mixer.XGBoostArrayMixer.fit"]], "fit() (mixer.xgboostmixer method)": [[14, "mixer.XGBoostMixer.fit"]], "mixer": [[14, "module-mixer"]], "partial_fit() (mixer.basemixer method)": [[14, "mixer.BaseMixer.partial_fit"]], "partial_fit() (mixer.neural method)": [[14, "mixer.Neural.partial_fit"]], "partial_fit() (mixer.randomforest method)": [[14, "mixer.RandomForest.partial_fit"]], "partial_fit() (mixer.regression method)": [[14, "mixer.Regression.partial_fit"]], "partial_fit() (mixer.sktime method)": [[14, "mixer.SkTime.partial_fit"]], "partial_fit() (mixer.unit method)": [[14, "mixer.Unit.partial_fit"]], "partial_fit() (mixer.xgboostarraymixer method)": [[14, "mixer.XGBoostArrayMixer.partial_fit"]], "partial_fit() (mixer.xgboostmixer method)": [[14, "mixer.XGBoostMixer.partial_fit"]], "supports_proba (mixer.xgboostmixer attribute)": [[14, "mixer.XGBoostMixer.supports_proba"]]}})